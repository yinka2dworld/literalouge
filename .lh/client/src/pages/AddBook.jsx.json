{
    "sourceFile": "client/src/pages/AddBook.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1736577395438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736585172894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+import '../css/AddBook.css';\r\n+import { useState } from 'react';\r\n+import { useNavigate } from 'react-router-dom';\r\n+import { ADDBOOK } from '../graphql/mutations';\r\n+import { useMutation } from '@apollo/client';\r\n+import Navbar from '../layout/Navbar';\r\n+import Footer from '../layout/Footer';\r\n+\r\n+const AddBook = () => {\r\n+  const navigate = useNavigate();\r\n+  const [formData, setFormData] = useState({\r\n+    bookCover: null,\r\n+    bookName: '',\r\n+    bookDescription: '',\r\n+    bookAuthor: '',\r\n+    bookCategory: '',\r\n+    bookLanguage: '',\r\n+    bookFile: null,\r\n+  });\r\n+\r\n+  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n+\r\n+  const handleInputChange = (e) => {\r\n+    const { name, value, files } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: files ? files[0] : value,\r\n+    }));\r\n+  };\r\n+\r\n+  const handleFileUpload = async (file) => {\r\n+    if (!file) return null;\r\n+    \r\n+    return file;\r\n+  };\r\n+\r\n+  const bookAdder = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+      const bookCover = await handleFileUpload(formData.bookCover);\r\n+      const bookFile = await handleFileUpload(formData.bookFile);\r\n+\r\n+      const { data } = await addBook({\r\n+        variables: {\r\n+          addbook: {\r\n+            bookName: formData.bookName,\r\n+            bookDescription: formData.bookDescription,\r\n+            bookAuthor: formData.bookAuthor,\r\n+            bookCategory: formData.bookCategory,\r\n+            bookLanguage: formData.bookLanguage,\r\n+            bookCover,\r\n+            bookFile, \r\n+          },\r\n+        \r\n+        context: {\r\n+          headers: {\r\n+             Authorization: 'Bearer ' + token, \r\n+         },\r\n+      },\r\n+     },\r\n+      });\r\n+\r\n+      console.log('Book added successfully!');\r\n+      navigate('/home');\r\n+    } catch (err) {\r\n+      console.error('Error adding book:', err.message);\r\n+    }\r\n+  };\r\n+\r\n+  const categories = [\r\n+    'Fiction',\r\n+    'Non-Fiction',\r\n+    'Science',\r\n+    'History',\r\n+    'Biography',\r\n+    'Fantasy',\r\n+    'Education',\r\n+  ];\r\n+\r\n+  const africanLanguages = [\r\n+    'Swahili',\r\n+    'Yoruba',\r\n+    'Zulu',\r\n+    'Amharic',\r\n+    'Hausa',\r\n+    'Somali',\r\n+    'Shona',\r\n+    'Oromo',\r\n+    'Fulbe',\r\n+    'Wollof',\r\n+    'Xhosa',\r\n+    'Afar',\r\n+    'Akan',\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"container\">\r\n+      <Navbar />\r\n+      <div className=\"form-container\">\r\n+        <h2>Add a New Book</h2>\r\n+        {addBookError && (\r\n+          <p className=\"errorMsg\">\r\n+            {addBookError.message || 'An unexpected error occurred.'}\r\n+          </p>\r\n+        )}\r\n+        <form className=\"create\" onSubmit={bookAdder}>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n+            <input\r\n+              type=\"file\"\r\n+              name=\"bookCover\"\r\n+              accept=\".png, .jpg, .jpeg\"\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"bookName\"\r\n+              value={formData.bookName}\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"bookAuthor\"\r\n+              value={formData.bookAuthor}\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n+            <textarea\r\n+              name=\"bookDescription\"\r\n+              value={formData.bookDescription}\r\n+              className=\"input-textarea\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n+            <select\r\n+              name=\"bookCategory\"\r\n+              value={formData.bookCategory}\r\n+              className=\"input-select\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            >\r\n+              <option value=\"\" disabled>Select a category</option>\r\n+              {categories.map((category) => (\r\n+                <option key={category} value={category}>\r\n+                  {category}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n+            <select\r\n+              name=\"bookLanguage\"\r\n+              value={formData.bookLanguage}\r\n+              className=\"input-select\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            >\r\n+              <option value=\"\" disabled>Select a language</option>\r\n+              {africanLanguages.map((language) => (\r\n+                <option key={language} value={language}>\r\n+                  {language}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n+            <input\r\n+              type=\"file\"\r\n+              name=\"bookFile\"\r\n+              accept=\".pdf, .epub\"\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n+              {addingBook ? 'Loading...' : 'Add Book'}\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+      <Footer />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AddBook;\r\n"
                },
                {
                    "date": 1736585811564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,391 +0,0 @@\n-import '../css/AddBook.css';\r\n-import { useState } from 'react';\r\n-import { useNavigate } from 'react-router-dom';\r\n-import { ADDBOOK } from '../graphql/mutations';\r\n-import { useMutation } from '@apollo/client';\r\n-import Navbar from '../layout/Navbar';\r\n-import Footer from '../layout/Footer';\r\n-\r\n-const AddBook = () => {\r\n-  const navigate = useNavigate();\r\n-  const [formData, setFormData] = useState({\r\n-    bookCover: null,\r\n-    bookName: '',\r\n-    bookDescription: '',\r\n-    bookAuthor: '',\r\n-    bookCategory: '',\r\n-    bookLanguage: '',\r\n-    bookFile: null,\r\n-  });\r\n-\r\n-  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n-\r\n-  const handleInputChange = (e) => {\r\n-    const { name, value, files } = e.target;\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      [name]: files ? files[0] : value,\r\n-    }));\r\n-  };\r\n-\r\n-  const handleFileUpload = async (file) => {\r\n-    if (!file) return null;\r\n-    \r\n-    return file;\r\n-  };\r\n-\r\n-  const bookAdder = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      const bookCover = await handleFileUpload(formData.bookCover);\r\n-      const bookFile = await handleFileUpload(formData.bookFile);\r\n-\r\n-      const { data } = await addBook({\r\n-        variables: {\r\n-          addbook: {\r\n-            bookName: formData.bookName,\r\n-            bookDescription: formData.bookDescription,\r\n-            bookAuthor: formData.bookAuthor,\r\n-            bookCategory: formData.bookCategory,\r\n-            bookLanguage: formData.bookLanguage,\r\n-            bookCover,\r\n-            bookFile, \r\n-          },\r\n-        \r\n-        context: {\r\n-          headers: {\r\n-             Authorization: 'Bearer ' + token, \r\n-         },\r\n-      },\r\n-     },\r\n-      });\r\n-\r\n-      console.log('Book added successfully!');\r\n-      navigate('/home');\r\n-    } catch (err) {\r\n-      console.error('Error adding book:', err.message);\r\n-    }\r\n-  };\r\n-\r\n-  const categories = [\r\n-    'Fiction',\r\n-    'Non-Fiction',\r\n-    'Science',\r\n-    'History',\r\n-    'Biography',\r\n-    'Fantasy',\r\n-    'Education',\r\n-  ];\r\n-\r\n-  const africanLanguages = [\r\n-    'Swahili',\r\n-    'Yoruba',\r\n-    'Zulu',\r\n-    'Amharic',\r\n-    'Hausa',\r\n-    'Somali',\r\n-    'Shona',\r\n-    'Oromo',\r\n-    'Fulbe',\r\n-    'Wollof',\r\n-    'Xhosa',\r\n-    'Afar',\r\n-    'Akan',\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"container\">\r\n-      <Navbar />\r\n-      <div className=\"form-container\">\r\n-        <h2>Add a New Book</h2>\r\n-        {addBookError && (\r\n-          <p className=\"errorMsg\">\r\n-            {addBookError.message || 'An unexpected error occurred.'}\r\n-          </p>\r\n-        )}\r\n-        <form className=\"create\" onSubmit={bookAdder}>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n-            <input\r\n-              type=\"file\"\r\n-              name=\"bookCover\"\r\n-              accept=\".png, .jpg, .jpeg\"\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"bookName\"\r\n-              value={formData.bookName}\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"bookAuthor\"\r\n-              value={formData.bookAuthor}\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n-            <textarea\r\n-              name=\"bookDescription\"\r\n-              value={formData.bookDescription}\r\n-              className=\"input-textarea\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n-            <select\r\n-              name=\"bookCategory\"\r\n-              value={formData.bookCategory}\r\n-              className=\"input-select\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            >\r\n-              <option value=\"\" disabled>Select a category</option>\r\n-              {categories.map((category) => (\r\n-                <option key={category} value={category}>\r\n-                  {category}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n-            <select\r\n-              name=\"bookLanguage\"\r\n-              value={formData.bookLanguage}\r\n-              className=\"input-select\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            >\r\n-              <option value=\"\" disabled>Select a language</option>\r\n-              {africanLanguages.map((language) => (\r\n-                <option key={language} value={language}>\r\n-                  {language}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n-            <input\r\n-              type=\"file\"\r\n-              name=\"bookFile\"\r\n-              accept=\".pdf, .epub\"\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n-              {addingBook ? 'Loading...' : 'Add Book'}\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n-      </div>\r\n-      <Footer />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AddBook;\r\n-import '../css/AddBook.css';\r\n-import React, { useState, useCallback } from 'react';\r\n-import { useNavigate } from 'react-router-dom';\r\n-import { ADDBOOK } from '../graphql/mutations';\r\n-import { useMutation } from '@apollo/client';\r\n-import Navbar from '../layout/Navbar';\r\n-import Footer from '../layout/Footer';\r\n-\r\n-const MemoizedNavbar = React.memo(Navbar);\r\n-const MemoizedFooter = React.memo(Footer);\r\n-\r\n-const categories = [\r\n-  'Fiction', 'Non-Fiction', 'Science', 'History', \r\n-  'Biography', 'Fantasy', 'Education',\r\n-];\r\n-\r\n-const africanLanguages = [\r\n-  'Swahili', 'Yoruba', 'Zulu', 'Amharic', 'Hausa',\r\n-  'Somali', 'Shona', 'Oromo', 'Fulbe', 'Wollof',\r\n-  'Xhosa', 'Afar', 'Akan',\r\n-];\r\n-\r\n-const AddBook = () => {\r\n-  const navigate = useNavigate();\r\n-  const [formData, setFormData] = useState({\r\n-    bookCover: null,\r\n-    bookName: '',\r\n-    bookDescription: '',\r\n-    bookAuthor: '',\r\n-    bookCategory: '',\r\n-    bookLanguage: '',\r\n-    bookFile: null,\r\n-  });\r\n-  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n-\r\n-  const handleInputChange = useCallback((e) => {\r\n-    const { name, value, files } = e.target;\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      [name]: files ? files[0] : value,\r\n-    }));\r\n-  }, []);\r\n-\r\n-  const handleFileUpload = async (file) => {\r\n-    if (!file) return null;\r\n-    return file;\r\n-  };\r\n-\r\n-  const bookAdder = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      const bookCover = await handleFileUpload(formData.bookCover);\r\n-      const bookFile = await handleFileUpload(formData.bookFile);\r\n-\r\n-      const { data } = await addBook({\r\n-        variables: {\r\n-          addbook: {\r\n-            bookName: formData.bookName.trim(),\r\n-            bookDescription: formData.bookDescription.trim(),\r\n-            bookAuthor: formData.bookAuthor.trim(),\r\n-            bookCategory: formData.bookCategory,\r\n-            bookLanguage: formData.bookLanguage,\r\n-            bookCover,\r\n-            bookFile,\r\n-          },\r\n-        },\r\n-        context: {\r\n-          headers: { Authorization: `Bearer ${token}` },\r\n-        },\r\n-      });\r\n-\r\n-      console.log('Book added successfully!', data);\r\n-      navigate('/home');\r\n-    } catch (err) {\r\n-      console.error('Error adding book:', err.message);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"container\">\r\n-      <MemoizedNavbar />\r\n-      <div className=\"form-container\">\r\n-        <h2>Add a New Book</h2>\r\n-        {addBookError && (\r\n-          <p className=\"errorMsg\">\r\n-            {addBookError.message || 'An unexpected error occurred.'}\r\n-          </p>\r\n-        )}\r\n-        <form className=\"create\" onSubmit={bookAdder}>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n-            <input\r\n-              type=\"file\"\r\n-              name=\"bookCover\"\r\n-              accept=\".png, .jpg, .jpeg\"\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"bookName\"\r\n-              value={formData.bookName}\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"bookAuthor\"\r\n-              value={formData.bookAuthor}\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n-            <textarea\r\n-              name=\"bookDescription\"\r\n-              value={formData.bookDescription}\r\n-              className=\"input-textarea\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n-            <select\r\n-              name=\"bookCategory\"\r\n-              value={formData.bookCategory}\r\n-              className=\"input-select\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            >\r\n-              <option value=\"\" disabled>Select a category</option>\r\n-              {categories.map((category) => (\r\n-                <option key={category} value={category}>{category}</option>\r\n-              ))}\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n-            <select\r\n-              name=\"bookLanguage\"\r\n-              value={formData.bookLanguage}\r\n-              className=\"input-select\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            >\r\n-              <option value=\"\" disabled>Select a language</option>\r\n-              {africanLanguages.map((language) => (\r\n-                <option key={language} value={language}>{language}</option>\r\n-              ))}\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n-            <input\r\n-              type=\"file\"\r\n-              name=\"bookFile\"\r\n-              accept=\".pdf, .epub\"\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n-              {addingBook ? 'Adding Book...' : 'Add Book'}\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n-      </div>\r\n-      <MemoizedFooter />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AddBook;\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736585838740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+import '../css/AddBook.css';\r\n+import { useState } from 'react';\r\n+import { useNavigate } from 'react-router-dom';\r\n+import { ADDBOOK } from '../graphql/mutations';\r\n+import { useMutation } from '@apollo/client';\r\n+import Navbar from '../layout/Navbar';\r\n+import Footer from '../layout/Footer';\r\n+\r\n+const AddBook = () => {\r\n+  const navigate = useNavigate();\r\n+  const [formData, setFormData] = useState({\r\n+    bookCover: null,\r\n+    bookName: '',\r\n+    bookDescription: '',\r\n+    bookAuthor: '',\r\n+    bookCategory: '',\r\n+    bookLanguage: '',\r\n+    bookFile: null,\r\n+  });\r\n+\r\n+  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n+\r\n+  const handleInputChange = (e) => {\r\n+    const { name, value, files } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: files ? files[0] : value,\r\n+    }));\r\n+  };\r\n+\r\n+  const handleFileUpload = async (file) => {\r\n+    if (!file) return null;\r\n+    \r\n+    return file;\r\n+  };\r\n+\r\n+  const bookAdder = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+      const bookCover = await handleFileUpload(formData.bookCover);\r\n+      const bookFile = await handleFileUpload(formData.bookFile);\r\n+\r\n+      const { datah } = await addBook({\r\n+        variables: {\r\n+          addbook: {\r\n+            bookName: formData.bookName,\r\n+            bookDescription: formData.bookDescription,\r\n+            bookAuthor: formData.bookAuthor,\r\n+            bookCategory: formData.bookCategory,\r\n+            bookLanguage: formData.bookLanguage,\r\n+            bookCover,\r\n+            bookFile, \r\n+          },\r\n+        \r\n+        context: {\r\n+          headers: {\r\n+             Authorization: 'Bearer ' + token, \r\n+         },\r\n+      },\r\n+     },\r\n+      });\r\n+\r\n+      console.log('Book added successfully!');\r\n+      navigate('/home');\r\n+    } catch (err) {\r\n+      console.error('Error adding book:', err.message);\r\n+    }\r\n+  };\r\n+\r\n+  const categories = [\r\n+    'Fiction',\r\n+    'Non-Fiction',\r\n+    'Science',\r\n+    'History',\r\n+    'Biography',\r\n+    'Fantasy',\r\n+    'Education',\r\n+  ];\r\n+\r\n+  const africanLanguages = [\r\n+    'Swahili',\r\n+    'Yoruba',\r\n+    'Zulu',\r\n+    'Amharic',\r\n+    'Hausa',\r\n+    'Somali',\r\n+    'Shona',\r\n+    'Oromo',\r\n+    'Fulbe',\r\n+    'Wollof',\r\n+    'Xhosa',\r\n+    'Afar',\r\n+    'Akan',\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"container\">\r\n+      <Navbar />\r\n+      <div className=\"form-container\">\r\n+        <h2>Add a New Book</h2>\r\n+        {addBookError && (\r\n+          <p className=\"errorMsg\">\r\n+            {addBookError.message || 'An unexpected error occurred.'}\r\n+          </p>\r\n+        )}\r\n+        <form className=\"create\" onSubmit={bookAdder}>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n+            <input\r\n+              type=\"file\"\r\n+              name=\"bookCover\"\r\n+              accept=\".png, .jpg, .jpeg\"\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"bookName\"\r\n+              value={formData.bookName}\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"bookAuthor\"\r\n+              value={formData.bookAuthor}\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n+            <textarea\r\n+              name=\"bookDescription\"\r\n+              value={formData.bookDescription}\r\n+              className=\"input-textarea\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n+            <select\r\n+              name=\"bookCategory\"\r\n+              value={formData.bookCategory}\r\n+              className=\"input-select\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            >\r\n+              <option value=\"\" disabled>Select a category</option>\r\n+              {categories.map((category) => (\r\n+                <option key={category} value={category}>\r\n+                  {category}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n+            <select\r\n+              name=\"bookLanguage\"\r\n+              value={formData.bookLanguage}\r\n+              className=\"input-select\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            >\r\n+              <option value=\"\" disabled>Select a language</option>\r\n+              {africanLanguages.map((language) => (\r\n+                <option key={language} value={language}>\r\n+                  {language}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n+            <input\r\n+              type=\"file\"\r\n+              name=\"bookFile\"\r\n+              accept=\".pdf, .epub\"\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n+              {addingBook ? 'Loading...' : 'Add Book'}\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+      <Footer />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AddBook;\r\n"
                },
                {
                    "date": 1736586036014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n       const token = localStorage.getItem('token');\r\n       const bookCover = await handleFileUpload(formData.bookCover);\r\n       const bookFile = await handleFileUpload(formData.bookFile);\r\n \r\n-      const { datah } = await addBook({\r\n+      const {  } = await addBook({\r\n         variables: {\r\n           addbook: {\r\n             bookName: formData.bookName,\r\n             bookDescription: formData.bookDescription,\r\n@@ -203,5 +203,4 @@\n   );\r\n };\r\n \r\n export default AddBook;\r\n-\n"
                },
                {
                    "date": 1736681370772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n       const token = localStorage.getItem('token');\r\n       const bookCover = await handleFileUpload(formData.bookCover);\r\n       const bookFile = await handleFileUpload(formData.bookFile);\r\n \r\n-      const {  } = await addBook({\r\n+      const { ...data } = await addBook({\r\n         variables: {\r\n           addbook: {\r\n             bookName: formData.bookName,\r\n             bookDescription: formData.bookDescription,\r\n"
                },
                {
                    "date": 1736681434452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,206 +0,0 @@\n-import '../css/AddBook.css';\r\n-import { useState } from 'react';\r\n-import { useNavigate } from 'react-router-dom';\r\n-import { ADDBOOK } from '../graphql/mutations';\r\n-import { useMutation } from '@apollo/client';\r\n-import Navbar from '../layout/Navbar';\r\n-import Footer from '../layout/Footer';\r\n-\r\n-const AddBook = () => {\r\n-  const navigate = useNavigate();\r\n-  const [formData, setFormData] = useState({\r\n-    bookCover: null,\r\n-    bookName: '',\r\n-    bookDescription: '',\r\n-    bookAuthor: '',\r\n-    bookCategory: '',\r\n-    bookLanguage: '',\r\n-    bookFile: null,\r\n-  });\r\n-\r\n-  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n-\r\n-  const handleInputChange = (e) => {\r\n-    const { name, value, files } = e.target;\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      [name]: files ? files[0] : value,\r\n-    }));\r\n-  };\r\n-\r\n-  const handleFileUpload = async (file) => {\r\n-    if (!file) return null;\r\n-    \r\n-    return file;\r\n-  };\r\n-\r\n-  const bookAdder = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-      const bookCover = await handleFileUpload(formData.bookCover);\r\n-      const bookFile = await handleFileUpload(formData.bookFile);\r\n-\r\n-      const { ...data } = await addBook({\r\n-        variables: {\r\n-          addbook: {\r\n-            bookName: formData.bookName,\r\n-            bookDescription: formData.bookDescription,\r\n-            bookAuthor: formData.bookAuthor,\r\n-            bookCategory: formData.bookCategory,\r\n-            bookLanguage: formData.bookLanguage,\r\n-            bookCover,\r\n-            bookFile, \r\n-          },\r\n-        \r\n-        context: {\r\n-          headers: {\r\n-             Authorization: 'Bearer ' + token, \r\n-         },\r\n-      },\r\n-     },\r\n-      });\r\n-\r\n-      console.log('Book added successfully!');\r\n-      navigate('/home');\r\n-    } catch (err) {\r\n-      console.error('Error adding book:', err.message);\r\n-    }\r\n-  };\r\n-\r\n-  const categories = [\r\n-    'Fiction',\r\n-    'Non-Fiction',\r\n-    'Science',\r\n-    'History',\r\n-    'Biography',\r\n-    'Fantasy',\r\n-    'Education',\r\n-  ];\r\n-\r\n-  const africanLanguages = [\r\n-    'Swahili',\r\n-    'Yoruba',\r\n-    'Zulu',\r\n-    'Amharic',\r\n-    'Hausa',\r\n-    'Somali',\r\n-    'Shona',\r\n-    'Oromo',\r\n-    'Fulbe',\r\n-    'Wollof',\r\n-    'Xhosa',\r\n-    'Afar',\r\n-    'Akan',\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"container\">\r\n-      <Navbar />\r\n-      <div className=\"form-container\">\r\n-        <h2>Add a New Book</h2>\r\n-        {addBookError && (\r\n-          <p className=\"errorMsg\">\r\n-            {addBookError.message || 'An unexpected error occurred.'}\r\n-          </p>\r\n-        )}\r\n-        <form className=\"create\" onSubmit={bookAdder}>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n-            <input\r\n-              type=\"file\"\r\n-              name=\"bookCover\"\r\n-              accept=\".png, .jpg, .jpeg\"\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"bookName\"\r\n-              value={formData.bookName}\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"bookAuthor\"\r\n-              value={formData.bookAuthor}\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n-            <textarea\r\n-              name=\"bookDescription\"\r\n-              value={formData.bookDescription}\r\n-              className=\"input-textarea\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n-            <select\r\n-              name=\"bookCategory\"\r\n-              value={formData.bookCategory}\r\n-              className=\"input-select\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            >\r\n-              <option value=\"\" disabled>Select a category</option>\r\n-              {categories.map((category) => (\r\n-                <option key={category} value={category}>\r\n-                  {category}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n-            <select\r\n-              name=\"bookLanguage\"\r\n-              value={formData.bookLanguage}\r\n-              className=\"input-select\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            >\r\n-              <option value=\"\" disabled>Select a language</option>\r\n-              {africanLanguages.map((language) => (\r\n-                <option key={language} value={language}>\r\n-                  {language}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n-            <input\r\n-              type=\"file\"\r\n-              name=\"bookFile\"\r\n-              accept=\".pdf, .epub\"\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n-              {addingBook ? 'Loading...' : 'Add Book'}\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n-      </div>\r\n-      <Footer />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AddBook;\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736681680162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,190 @@\n-\n+import '../css/AddBook.css';\r\n+import { useState } from 'react';\r\n+import { useNavigate } from 'react-router-dom';\r\n+import { ADDBOOK } from '../graphql/mutations';\r\n+import { useMutation } from '@apollo/client';\r\n+import Navbar from '../layout/Navbar';\r\n+import Footer from '../layout/Footer';\r\n+\r\n+const AddBook = () => {\r\n+  const navigate = useNavigate();\r\n+  const [formData, setFormData] = useState({\r\n+    bookName: '',\r\n+    bookDescription: '',\r\n+    bookAuthor: '',\r\n+    bookCategory: '',\r\n+    bookLanguage: '',\r\n+  });\r\n+  const [files, setFiles] = useState({ bookCover: null, bookFile: null });\r\n+  const [fileUrls, setFileUrls] = useState({ bookCover: '', bookFile: '' });\r\n+  const [uploadingFiles, setUploadingFiles] = useState(false);\r\n+\r\n+  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n+\r\n+  const handleInputChange = (e) => {\r\n+    const { name, value } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: value,\r\n+    }));\r\n+  };\r\n+\r\n+  const handleFileChange = async (e) => {\r\n+    const { name, files: selectedFiles } = e.target;\r\n+    const file = selectedFiles[0];\r\n+    if (!file) return;\r\n+\r\n+    setFiles((prev) => ({ ...prev, [name]: file }));\r\n+    setUploadingFiles(true);\r\n+\r\n+    // Simulate file upload and get the URL\r\n+    setTimeout(() => {\r\n+      setFileUrls((prev) => ({ ...prev, [name]: URL.createObjectURL(file) }));\r\n+      setUploadingFiles(false);\r\n+    }, 1000); // Replace with actual upload logic\r\n+  };\r\n+\r\n+  const bookAdder = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    if (!formData.bookName || !formData.bookAuthor || !formData.bookDescription) {\r\n+      alert('Please fill all required fields.');\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+\r\n+      const { data } = await addBook({\r\n+        variables: {\r\n+          addbook: {\r\n+            ...formData,\r\n+            bookCover: fileUrls.bookCover,\r\n+            bookFile: fileUrls.bookFile,\r\n+          },\r\n+        },\r\n+        context: {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        },\r\n+      });\r\n+\r\n+      console.log('Book added successfully!', data);\r\n+      navigate('/home');\r\n+    } catch (err) {\r\n+      console.error('Error adding book:', err.message);\r\n+    }\r\n+  };\r\n+\r\n+  const categories = ['Fiction', 'Non-Fiction', 'Science', 'History', 'Biography', 'Fantasy', 'Education'];\r\n+  const africanLanguages = ['Swahili', 'Yoruba', 'Zulu', 'Amharic', 'Hausa', 'Somali', 'Shona', 'Oromo', 'Fulbe', 'Wollof', 'Xhosa', 'Afar', 'Akan'];\r\n+\r\n+  return (\r\n+    <div className=\"container\">\r\n+      <Navbar />\r\n+      <div className=\"form-container\">\r\n+        <h2>Add a New Book</h2>\r\n+        {addBookError && <p className=\"errorMsg\">{addBookError.message || 'An unexpected error occurred.'}</p>}\r\n+        <form className=\"create\" onSubmit={bookAdder}>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n+            <input\r\n+              type=\"file\"\r\n+              name=\"bookCover\"\r\n+              accept=\".png, .jpg, .jpeg\"\r\n+              className=\"input-text\"\r\n+              onChange={handleFileChange}\r\n+            />\r\n+            {uploadingFiles && <p className=\"uploading\">Uploading...</p>}\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"bookName\"\r\n+              value={formData.bookName}\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n+            <input\r\n+              type=\"text\"\r\n+              name=\"bookAuthor\"\r\n+              value={formData.bookAuthor}\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n+            <textarea\r\n+              name=\"bookDescription\"\r\n+              value={formData.bookDescription}\r\n+              className=\"input-textarea\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n+            <select\r\n+              name=\"bookCategory\"\r\n+              value={formData.bookCategory}\r\n+              className=\"input-select\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            >\r\n+              <option value=\"\" disabled>Select a category</option>\r\n+              {categories.map((category) => (\r\n+                <option key={category} value={category}>\r\n+                  {category}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n+            <select\r\n+              name=\"bookLanguage\"\r\n+              value={formData.bookLanguage}\r\n+              className=\"input-select\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            >\r\n+              <option value=\"\" disabled>Select a language</option>\r\n+              {africanLanguages.map((language) => (\r\n+                <option key={language} value={language}>\r\n+                  {language}\r\n+                </option>\r\n+              ))}\r\n+            </select>\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n+            <input\r\n+              type=\"file\"\r\n+              name=\"bookFile\"\r\n+              accept=\".pdf, .epub\"\r\n+              className=\"input-text\"\r\n+              onChange={handleFileChange}\r\n+            />\r\n+            {uploadingFiles && <p className=\"uploading\">Uploading...</p>}\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook || uploadingFiles}>\r\n+              {addingBook ? 'Loading...' : 'Add Book'}\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+      <Footer />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AddBook;\r\n"
                },
                {
                    "date": 1736681718127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,96 +8,113 @@\n \r\n const AddBook = () => {\r\n   const navigate = useNavigate();\r\n   const [formData, setFormData] = useState({\r\n+    bookCover: null,\r\n     bookName: '',\r\n     bookDescription: '',\r\n     bookAuthor: '',\r\n     bookCategory: '',\r\n     bookLanguage: '',\r\n+    bookFile: null,\r\n   });\r\n-  const [files, setFiles] = useState({ bookCover: null, bookFile: null });\r\n-  const [fileUrls, setFileUrls] = useState({ bookCover: '', bookFile: '' });\r\n-  const [uploadingFiles, setUploadingFiles] = useState(false);\r\n \r\n   const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n \r\n   const handleInputChange = (e) => {\r\n-    const { name, value } = e.target;\r\n+    const { name, value, files } = e.target;\r\n     setFormData((prev) => ({\r\n       ...prev,\r\n-      [name]: value,\r\n+      [name]: files ? files[0] : value,\r\n     }));\r\n   };\r\n \r\n-  const handleFileChange = async (e) => {\r\n-    const { name, files: selectedFiles } = e.target;\r\n-    const file = selectedFiles[0];\r\n-    if (!file) return;\r\n-\r\n-    setFiles((prev) => ({ ...prev, [name]: file }));\r\n-    setUploadingFiles(true);\r\n-\r\n-    // Simulate file upload and get the URL\r\n-    setTimeout(() => {\r\n-      setFileUrls((prev) => ({ ...prev, [name]: URL.createObjectURL(file) }));\r\n-      setUploadingFiles(false);\r\n-    }, 1000); // Replace with actual upload logic\r\n+  const handleFileUpload = async (file) => {\r\n+    if (!file) return null;\r\n+    \r\n+    return file;\r\n   };\r\n \r\n   const bookAdder = async (e) => {\r\n     e.preventDefault();\r\n-\r\n-    if (!formData.bookName || !formData.bookAuthor || !formData.bookDescription) {\r\n-      alert('Please fill all required fields.');\r\n-      return;\r\n-    }\r\n-\r\n     try {\r\n       const token = localStorage.getItem('token');\r\n+      const bookCover = await handleFileUpload(formData.bookCover);\r\n+      const bookFile = await handleFileUpload(formData.bookFile);\r\n \r\n       const { data } = await addBook({\r\n         variables: {\r\n           addbook: {\r\n-            ...formData,\r\n-            bookCover: fileUrls.bookCover,\r\n-            bookFile: fileUrls.bookFile,\r\n+            bookName: formData.bookName,\r\n+            bookDescription: formData.bookDescription,\r\n+            bookAuthor: formData.bookAuthor,\r\n+            bookCategory: formData.bookCategory,\r\n+            bookLanguage: formData.bookLanguage,\r\n+            bookCover,\r\n+            bookFile, \r\n           },\r\n-        },\r\n+        \r\n         context: {\r\n           headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        },\r\n+             Authorization: 'Bearer ' + token, \r\n+         },\r\n+      },\r\n+     },\r\n       });\r\n \r\n-      console.log('Book added successfully!', data);\r\n+      console.log('Book added successfully!');\r\n       navigate('/home');\r\n     } catch (err) {\r\n       console.error('Error adding book:', err.message);\r\n     }\r\n   };\r\n \r\n-  const categories = ['Fiction', 'Non-Fiction', 'Science', 'History', 'Biography', 'Fantasy', 'Education'];\r\n-  const africanLanguages = ['Swahili', 'Yoruba', 'Zulu', 'Amharic', 'Hausa', 'Somali', 'Shona', 'Oromo', 'Fulbe', 'Wollof', 'Xhosa', 'Afar', 'Akan'];\r\n+  const categories = [\r\n+    'Fiction',\r\n+    'Non-Fiction',\r\n+    'Science',\r\n+    'History',\r\n+    'Biography',\r\n+    'Fantasy',\r\n+    'Education',\r\n+  ];\r\n \r\n+  const africanLanguages = [\r\n+    'Swahili',\r\n+    'Yoruba',\r\n+    'Zulu',\r\n+    'Amharic',\r\n+    'Hausa',\r\n+    'Somali',\r\n+    'Shona',\r\n+    'Oromo',\r\n+    'Fulbe',\r\n+    'Wollof',\r\n+    'Xhosa',\r\n+    'Afar',\r\n+    'Akan',\r\n+  ];\r\n+\r\n   return (\r\n     <div className=\"container\">\r\n       <Navbar />\r\n       <div className=\"form-container\">\r\n         <h2>Add a New Book</h2>\r\n-        {addBookError && <p className=\"errorMsg\">{addBookError.message || 'An unexpected error occurred.'}</p>}\r\n+        {addBookError && (\r\n+          <p className=\"errorMsg\">\r\n+            {addBookError.message || 'An unexpected error occurred.'}\r\n+          </p>\r\n+        )}\r\n         <form className=\"create\" onSubmit={bookAdder}>\r\n           <div className=\"form-group\">\r\n             <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n             <input\r\n               type=\"file\"\r\n               name=\"bookCover\"\r\n               accept=\".png, .jpg, .jpeg\"\r\n               className=\"input-text\"\r\n-              onChange={handleFileChange}\r\n+              onChange={handleInputChange}\r\n             />\r\n-            {uploadingFiles && <p className=\"uploading\">Uploading...</p>}\r\n           </div>\r\n           <div className=\"form-group\">\r\n             <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n             <input\r\n@@ -170,14 +187,13 @@\n               type=\"file\"\r\n               name=\"bookFile\"\r\n               accept=\".pdf, .epub\"\r\n               className=\"input-text\"\r\n-              onChange={handleFileChange}\r\n+              onChange={handleInputChange}\r\n             />\r\n-            {uploadingFiles && <p className=\"uploading\">Uploading...</p>}\r\n           </div>\r\n           <div className=\"form-group\">\r\n-            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook || uploadingFiles}>\r\n+            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n               {addingBook ? 'Loading...' : 'Add Book'}\r\n             </button>\r\n           </div>\r\n         </form>\r\n"
                },
                {
                    "date": 1736681874383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,16 +29,17 @@\n   };\r\n \r\n   const handleFileUpload = async (file) => {\r\n     if (!file) return null;\r\n-    \r\n+    // Simulate file upload logic if needed\r\n     return file;\r\n   };\r\n \r\n   const bookAdder = async (e) => {\r\n     e.preventDefault();\r\n     try {\r\n       const token = localStorage.getItem('token');\r\n+\r\n       const bookCover = await handleFileUpload(formData.bookCover);\r\n       const bookFile = await handleFileUpload(formData.bookFile);\r\n \r\n       const { data } = await addBook({\r\n@@ -49,20 +50,19 @@\n             bookAuthor: formData.bookAuthor,\r\n             bookCategory: formData.bookCategory,\r\n             bookLanguage: formData.bookLanguage,\r\n             bookCover,\r\n-            bookFile, \r\n+            bookFile,\r\n           },\r\n-        \r\n+        },\r\n         context: {\r\n           headers: {\r\n-             Authorization: 'Bearer ' + token, \r\n-         },\r\n-      },\r\n-     },\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        },\r\n       });\r\n \r\n-      console.log('Book added successfully!');\r\n+      console.log('Book added successfully!', data);\r\n       navigate('/home');\r\n     } catch (err) {\r\n       console.error('Error adding book:', err.message);\r\n     }\r\n@@ -192,9 +192,9 @@\n             />\r\n           </div>\r\n           <div className=\"form-group\">\r\n             <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n-              {addingBook ? 'Loading...' : 'Add Book'}\r\n+              {addingBook ? 'Adding...' : 'Add Book'}\r\n             </button>\r\n           </div>\r\n         </form>\r\n       </div>\r\n@@ -203,4 +203,5 @@\n   );\r\n };\r\n \r\n export default AddBook;\r\n+\r\n"
                },
                {
                    "date": 1736685186012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,101 +103,9 @@\n           <p className=\"errorMsg\">\r\n             {addBookError.message || 'An unexpected error occurred.'}\r\n           </p>\r\n         )}\r\n-        <form className=\"create\" onSubmit={bookAdder}>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n-            <input\r\n-              type=\"file\"\r\n-              name=\"bookCover\"\r\n-              accept=\".png, .jpg, .jpeg\"\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"bookName\"\r\n-              value={formData.bookName}\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n-            <input\r\n-              type=\"text\"\r\n-              name=\"bookAuthor\"\r\n-              value={formData.bookAuthor}\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n-            <textarea\r\n-              name=\"bookDescription\"\r\n-              value={formData.bookDescription}\r\n-              className=\"input-textarea\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n-            <select\r\n-              name=\"bookCategory\"\r\n-              value={formData.bookCategory}\r\n-              className=\"input-select\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            >\r\n-              <option value=\"\" disabled>Select a category</option>\r\n-              {categories.map((category) => (\r\n-                <option key={category} value={category}>\r\n-                  {category}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n-            <select\r\n-              name=\"bookLanguage\"\r\n-              value={formData.bookLanguage}\r\n-              className=\"input-select\"\r\n-              onChange={handleInputChange}\r\n-              required\r\n-            >\r\n-              <option value=\"\" disabled>Select a language</option>\r\n-              {africanLanguages.map((language) => (\r\n-                <option key={language} value={language}>\r\n-                  {language}\r\n-                </option>\r\n-              ))}\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n-            <input\r\n-              type=\"file\"\r\n-              name=\"bookFile\"\r\n-              accept=\".pdf, .epub\"\r\n-              className=\"input-text\"\r\n-              onChange={handleInputChange}\r\n-            />\r\n-          </div>\r\n-          <div className=\"form-group\">\r\n-            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n-              {addingBook ? 'Adding...' : 'Add Book'}\r\n-            </button>\r\n-          </div>\r\n-        </form>\r\n+        \r\n       </div>\r\n       <Footer />\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1736685199112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+import '../css/AddBook.css';\r\n+import { useState } from 'react';\r\n+import { useNavigate } from 'react-router-dom';\r\n+import { ADDBOOK } from '../graphql/mutations';\r\n+import { useMutation } from '@apollo/client';\r\n+import Navbar from '../layout/Navbar';\r\n+import Footer from '../layout/Footer';\r\n+\r\n+const AddBook = () => {\r\n+  const navigate = useNavigate();\r\n+  const [formData, setFormData] = useState({\r\n+    bookCover: null,\r\n+    bookName: '',\r\n+    bookDescription: '',\r\n+    bookAuthor: '',\r\n+    bookCategory: '',\r\n+    bookLanguage: '',\r\n+    bookFile: null,\r\n+  });\r\n+\r\n+  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n+\r\n+  const handleInputChange = (e) => {\r\n+    const { name, value, files } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: files ? files[0] : value,\r\n+    }));\r\n+  };\r\n+\r\n+  const handleFileUpload = async (file) => {\r\n+    if (!file) return null;\r\n+    // Simulate file upload logic if needed\r\n+    return file;\r\n+  };\r\n+\r\n+  const bookAdder = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+\r\n+      const bookCover = await handleFileUpload(formData.bookCover);\r\n+      const bookFile = await handleFileUpload(formData.bookFile);\r\n+\r\n+      const { data } = await addBook({\r\n+        variables: {\r\n+          addbook: {\r\n+            bookName: formData.bookName,\r\n+            bookDescription: formData.bookDescription,\r\n+            bookAuthor: formData.bookAuthor,\r\n+            bookCategory: formData.bookCategory,\r\n+            bookLanguage: formData.bookLanguage,\r\n+            bookCover,\r\n+            bookFile,\r\n+          },\r\n+        },\r\n+        context: {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        },\r\n+      });\r\n+\r\n+      console.log('Book added successfully!', data);\r\n+      navigate('/home');\r\n+    } catch (err) {\r\n+      console.error('Error adding book:', err.message);\r\n+    }\r\n+  };\r\n+\r\n+  const categories = [\r\n+    'Fiction',\r\n+    'Non-Fiction',\r\n+    'Science',\r\n+    'History',\r\n+    'Biography',\r\n+    'Fantasy',\r\n+    'Education',\r\n+  ];\r\n+\r\n+  const africanLanguages = [\r\n+    'Swahili',\r\n+    'Yoruba',\r\n+    'Zulu',\r\n+    'Amharic',\r\n+    'Hausa',\r\n+    'Somali',\r\n+    'Shona',\r\n+    'Oromo',\r\n+    'Fulbe',\r\n+    'Wollof',\r\n+    'Xhosa',\r\n+    'Afar',\r\n+    'Akan',\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"container\">\r\n+      <Navbar />\r\n+      <div className=\"form-container\">\r\n+        <h2>Add a New Book</h2>\r\n+        {addBookError && (\r\n+          <p className=\"errorMsg\">\r\n+            {addBookError.message || 'An unexpected error occurred.'}\r\n+          </p>\r\n+        )}\r\n+        \r\n+        <form className=\"create\" onSubmit={bookAdder}>\r\n+  <div className=\"form-group\">\r\n+    <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n+    <input\r\n+      type=\"file\"\r\n+      name=\"bookCover\"\r\n+      accept=\".png, .jpg, .jpeg\"\r\n+      className=\"input-text\"\r\n+      onChange={handleInputChange}\r\n+    />\r\n+  </div>\r\n+\r\n+  <div className=\"form-row\">\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n+      <input\r\n+        type=\"text\"\r\n+        name=\"bookName\"\r\n+        value={formData.bookName}\r\n+        className=\"input-text\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      />\r\n+    </div>\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n+      <input\r\n+        type=\"text\"\r\n+        name=\"bookAuthor\"\r\n+        value={formData.bookAuthor}\r\n+        className=\"input-text\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      />\r\n+    </div>\r\n+  </div>\r\n+\r\n+  <div className=\"form-row\">\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n+      <select\r\n+        name=\"bookCategory\"\r\n+        value={formData.bookCategory}\r\n+        className=\"input-select\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      >\r\n+        <option value=\"\" disabled>Select a category</option>\r\n+        {categories.map((category) => (\r\n+          <option key={category} value={category}>\r\n+            {category}\r\n+          </option>\r\n+        ))}\r\n+      </select>\r\n+    </div>\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n+      <select\r\n+        name=\"bookLanguage\"\r\n+        value={formData.bookLanguage}\r\n+        className=\"input-select\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      >\r\n+        <option value=\"\" disabled>Select a language</option>\r\n+        {africanLanguages.map((language) => (\r\n+          <option key={language} value={language}>\r\n+            {language}\r\n+          </option>\r\n+        ))}\r\n+      </select>\r\n+    </div>\r\n+  </div>\r\n+\r\n+  <div className=\"form-group\">\r\n+    <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n+    <textarea\r\n+      name=\"bookDescription\"\r\n+      value={formData.bookDescription}\r\n+      className=\"input-textarea\"\r\n+      onChange={handleInputChange}\r\n+      required\r\n+    />\r\n+  </div>\r\n+\r\n+  <div className=\"form-group\">\r\n+    <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n+    <input\r\n+      type=\"file\"\r\n+      name=\"bookFile\"\r\n+      accept=\".pdf, .epub\"\r\n+      className=\"input-text\"\r\n+      onChange={handleInputChange}\r\n+    />\r\n+  </div>\r\n+\r\n+  <div className=\"form-group\">\r\n+    <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n+      {addingBook ? 'Adding...' : 'Add Book'}\r\n+    </button>\r\n+  </div>\r\n+</form>\r\n+\r\n+      </div>\r\n+      <Footer />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AddBook;\r\n+\r\n"
                },
                {
                    "date": 1740313088393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n   const bookAdder = async (e) => {\r\n     e.preventDefault();\r\n     try {\r\n       const token = localStorage.getItem('token');\r\n-\r\n+c\r\n       const bookCover = await handleFileUpload(formData.bookCover);\r\n       const bookFile = await handleFileUpload(formData.bookFile);\r\n \r\n       const { data } = await addBook({\r\n@@ -215,119 +215,4 @@\n };\r\n \r\n export default AddBook;\r\n \r\n-import '../css/AddBook.css';\r\n-import { useState } from 'react';\r\n-import { useNavigate } from 'react-router-dom';\r\n-import { ADDBOOK } from '../graphql/mutations';\r\n-import { useMutation } from '@apollo/client';\r\n-import Navbar from '../layout/Navbar';\r\n-import Footer from '../layout/Footer';\r\n-\r\n-const AddBook = () => {\r\n-  const navigate = useNavigate();\r\n-  const [formData, setFormData] = useState({\r\n-    bookCover: null,\r\n-    bookName: '',\r\n-    bookDescription: '',\r\n-    bookAuthor: '',\r\n-    bookCategory: '',\r\n-    bookLanguage: '',\r\n-    bookFile: null,\r\n-  });\r\n-\r\n-  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n-\r\n-  const handleInputChange = (e) => {\r\n-    const { name, value, files } = e.target;\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      [name]: files ? files[0] : value,\r\n-    }));\r\n-  };\r\n-\r\n-  const handleFileUpload = async (file) => {\r\n-    if (!file) return null;\r\n-    // Simulate file upload logic if needed\r\n-    return file;\r\n-  };\r\n-\r\n-  const bookAdder = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-\r\n-      const bookCover = await handleFileUpload(formData.bookCover);\r\n-      const bookFile = await handleFileUpload(formData.bookFile);\r\n-\r\n-      const { data } = await addBook({\r\n-        variables: {\r\n-          addbook: {\r\n-            bookName: formData.bookName,\r\n-            bookDescription: formData.bookDescription,\r\n-            bookAuthor: formData.bookAuthor,\r\n-            bookCategory: formData.bookCategory,\r\n-            bookLanguage: formData.bookLanguage,\r\n-            bookCover,\r\n-            bookFile,\r\n-          },\r\n-        },\r\n-        context: {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        },\r\n-      });\r\n-\r\n-      console.log('Book added successfully!', data);\r\n-      navigate('/home');\r\n-    } catch (err) {\r\n-      console.error('Error adding book:', err.message);\r\n-    }\r\n-  };\r\n-\r\n-  const categories = [\r\n-    'Fiction',\r\n-    'Non-Fiction',\r\n-    'Science',\r\n-    'History',\r\n-    'Biography',\r\n-    'Fantasy',\r\n-    'Education',\r\n-  ];\r\n-\r\n-  const africanLanguages = [\r\n-    'Swahili',\r\n-    'Yoruba',\r\n-    'Zulu',\r\n-    'Amharic',\r\n-    'Hausa',\r\n-    'Somali',\r\n-    'Shona',\r\n-    'Oromo',\r\n-    'Fulbe',\r\n-    'Wollof',\r\n-    'Xhosa',\r\n-    'Afar',\r\n-    'Akan',\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"container\">\r\n-      <Navbar />\r\n-      <div className=\"form-container\">\r\n-        <h2>Add a New Book</h2>\r\n-        {addBookError && (\r\n-          <p className=\"errorMsg\">\r\n-            {addBookError.message || 'An unexpected error occurred.'}\r\n-          </p>\r\n-        )}\r\n-        \r\n-      </div>\r\n-      <Footer />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AddBook;\r\n-\r\n"
                },
                {
                    "date": 1740313093660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+import '../css/AddBook.css';\r\n+import { useState } from 'react';\r\n+import { useNavigate } from 'react-router-dom';\r\n+import { ADDBOOK } from '../graphql/mutations';\r\n+import { useMutation } from '@apollo/client';\r\n+import Navbar from '../layout/Navbar';\r\n+import Footer from '../layout/Footer';\r\n+\r\n+const AddBook = () => {\r\n+  const navigate = useNavigate();\r\n+  const [formData, setFormData] = useState({\r\n+    bookCover: null,\r\n+    bookName: '',\r\n+    bookDescription: '',\r\n+    bookAuthor: '',\r\n+    bookCategory: '',\r\n+    bookLanguage: '',\r\n+    bookFile: null,\r\n+  });\r\n+\r\n+  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n+\r\n+  const handleInputChange = (e) => {\r\n+    const { name, value, files } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: files ? files[0] : value,\r\n+    }));\r\n+  };\r\n+\r\n+  const handleFileUpload = async (file) => {\r\n+    if (!file) return null;\r\n+    // Simulate file upload logic if needed\r\n+    return file;\r\n+  };\r\n+\r\n+  const bookAdder = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+console.log\r\n+      const bookCover = await handleFileUpload(formData.bookCover);\r\n+      const bookFile = await handleFileUpload(formData.bookFile);\r\n+\r\n+      const { data } = await addBook({\r\n+        variables: {\r\n+          addbook: {\r\n+            bookName: formData.bookName,\r\n+            bookDescription: formData.bookDescription,\r\n+            bookAuthor: formData.bookAuthor,\r\n+            bookCategory: formData.bookCategory,\r\n+            bookLanguage: formData.bookLanguage,\r\n+            bookCover,\r\n+            bookFile,\r\n+          },\r\n+        },\r\n+        context: {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        },\r\n+      });\r\n+\r\n+      console.log('Book added successfully!', data);\r\n+      navigate('/home');\r\n+    } catch (err) {\r\n+      console.error('Error adding book:', err.message);\r\n+    }\r\n+  };\r\n+\r\n+  const categories = [\r\n+    'Fiction',\r\n+    'Non-Fiction',\r\n+    'Science',\r\n+    'History',\r\n+    'Biography',\r\n+    'Fantasy',\r\n+    'Education',\r\n+  ];\r\n+\r\n+  const africanLanguages = [\r\n+    'Swahili',\r\n+    'Yoruba',\r\n+    'Zulu',\r\n+    'Amharic',\r\n+    'Hausa',\r\n+    'Somali',\r\n+    'Shona',\r\n+    'Oromo',\r\n+    'Fulbe',\r\n+    'Wollof',\r\n+    'Xhosa',\r\n+    'Afar',\r\n+    'Akan',\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"container\">\r\n+      <Navbar />\r\n+      <div className=\"form-container\">\r\n+        <h2>Add a New Book</h2>\r\n+        {addBookError && (\r\n+          <p className=\"errorMsg\">\r\n+            {addBookError.message || 'An unexpected error occurred.'}\r\n+          </p>\r\n+        )}\r\n+        \r\n+        <form className=\"create\" onSubmit={bookAdder}>\r\n+  <div className=\"form-group\">\r\n+    <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n+    <input\r\n+      type=\"file\"\r\n+      name=\"bookCover\"\r\n+      accept=\".png, .jpg, .jpeg\"\r\n+      className=\"input-text\"\r\n+      onChange={handleInputChange}\r\n+    />\r\n+  </div>\r\n+\r\n+  <div className=\"form-row\">\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n+      <input\r\n+        type=\"text\"\r\n+        name=\"bookName\"\r\n+        value={formData.bookName}\r\n+        className=\"input-text\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      />\r\n+    </div>\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n+      <input\r\n+        type=\"text\"\r\n+        name=\"bookAuthor\"\r\n+        value={formData.bookAuthor}\r\n+        className=\"input-text\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      />\r\n+    </div>\r\n+  </div>\r\n+\r\n+  <div className=\"form-row\">\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n+      <select\r\n+        name=\"bookCategory\"\r\n+        value={formData.bookCategory}\r\n+        className=\"input-select\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      >\r\n+        <option value=\"\" disabled>Select a category</option>\r\n+        {categories.map((category) => (\r\n+          <option key={category} value={category}>\r\n+            {category}\r\n+          </option>\r\n+        ))}\r\n+      </select>\r\n+    </div>\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n+      <select\r\n+        name=\"bookLanguage\"\r\n+        value={formData.bookLanguage}\r\n+        className=\"input-select\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      >\r\n+        <option value=\"\" disabled>Select a language</option>\r\n+        {africanLanguages.map((language) => (\r\n+          <option key={language} value={language}>\r\n+            {language}\r\n+          </option>\r\n+        ))}\r\n+      </select>\r\n+    </div>\r\n+  </div>\r\n+\r\n+  <div className=\"form-group\">\r\n+    <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n+    <textarea\r\n+      name=\"bookDescription\"\r\n+      value={formData.bookDescription}\r\n+      className=\"input-textarea\"\r\n+      onChange={handleInputChange}\r\n+      required\r\n+    />\r\n+  </div>\r\n+\r\n+  <div className=\"form-group\">\r\n+    <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n+    <input\r\n+      type=\"file\"\r\n+      name=\"bookFile\"\r\n+      accept=\".pdf, .epub\"\r\n+      className=\"input-text\"\r\n+      onChange={handleInputChange}\r\n+    />\r\n+  </div>\r\n+\r\n+  <div className=\"form-group\">\r\n+    <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n+      {addingBook ? 'Adding...' : 'Add Book'}\r\n+    </button>\r\n+  </div>\r\n+</form>\r\n+\r\n+      </div>\r\n+      <Footer />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AddBook;\r\n+\r\n"
                },
                {
                    "date": 1740313099374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+import '../css/AddBook.css';\r\n+import { useState } from 'react';\r\n+import { useNavigate } from 'react-router-dom';\r\n+import { ADDBOOK } from '../graphql/mutations';\r\n+import { useMutation } from '@apollo/client';\r\n+import Navbar from '../layout/Navbar';\r\n+import Footer from '../layout/Footer';\r\n+\r\n+const AddBook = () => {\r\n+  const navigate = useNavigate();\r\n+  const [formData, setFormData] = useState({\r\n+    bookCover: null,\r\n+    bookName: '',\r\n+    bookDescription: '',\r\n+    bookAuthor: '',\r\n+    bookCategory: '',\r\n+    bookLanguage: '',\r\n+    bookFile: null,\r\n+  });\r\n+\r\n+  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n+\r\n+  const handleInputChange = (e) => {\r\n+    const { name, value, files } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: files ? files[0] : value,\r\n+    }));\r\n+  };\r\n+\r\n+  const handleFileUpload = async (file) => {\r\n+    if (!file) return null;\r\n+    // Simulate file upload logic if needed\r\n+    return file;\r\n+  };\r\n+\r\n+  const bookAdder = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      const token = localStorage.getItem('token');\r\n+console.log(token)\r\n+      const bookCover = await handleFileUpload(formData.bookCover);\r\n+      const bookFile = await handleFileUpload(formData.bookFile);\r\n+\r\n+      const { data } = await addBook({\r\n+        variables: {\r\n+          addbook: {\r\n+            bookName: formData.bookName,\r\n+            bookDescription: formData.bookDescription,\r\n+            bookAuthor: formData.bookAuthor,\r\n+            bookCategory: formData.bookCategory,\r\n+            bookLanguage: formData.bookLanguage,\r\n+            bookCover,\r\n+            bookFile,\r\n+          },\r\n+        },\r\n+        context: {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        },\r\n+      });\r\n+\r\n+      console.log('Book added successfully!', data);\r\n+      navigate('/home');\r\n+    } catch (err) {\r\n+      console.error('Error adding book:', err.message);\r\n+    }\r\n+  };\r\n+\r\n+  const categories = [\r\n+    'Fiction',\r\n+    'Non-Fiction',\r\n+    'Science',\r\n+    'History',\r\n+    'Biography',\r\n+    'Fantasy',\r\n+    'Education',\r\n+  ];\r\n+\r\n+  const africanLanguages = [\r\n+    'Swahili',\r\n+    'Yoruba',\r\n+    'Zulu',\r\n+    'Amharic',\r\n+    'Hausa',\r\n+    'Somali',\r\n+    'Shona',\r\n+    'Oromo',\r\n+    'Fulbe',\r\n+    'Wollof',\r\n+    'Xhosa',\r\n+    'Afar',\r\n+    'Akan',\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"container\">\r\n+      <Navbar />\r\n+      <div className=\"form-container\">\r\n+        <h2>Add a New Book</h2>\r\n+        {addBookError && (\r\n+          <p className=\"errorMsg\">\r\n+            {addBookError.message || 'An unexpected error occurred.'}\r\n+          </p>\r\n+        )}\r\n+        \r\n+        <form className=\"create\" onSubmit={bookAdder}>\r\n+  <div className=\"form-group\">\r\n+    <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n+    <input\r\n+      type=\"file\"\r\n+      name=\"bookCover\"\r\n+      accept=\".png, .jpg, .jpeg\"\r\n+      className=\"input-text\"\r\n+      onChange={handleInputChange}\r\n+    />\r\n+  </div>\r\n+\r\n+  <div className=\"form-row\">\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n+      <input\r\n+        type=\"text\"\r\n+        name=\"bookName\"\r\n+        value={formData.bookName}\r\n+        className=\"input-text\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      />\r\n+    </div>\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n+      <input\r\n+        type=\"text\"\r\n+        name=\"bookAuthor\"\r\n+        value={formData.bookAuthor}\r\n+        className=\"input-text\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      />\r\n+    </div>\r\n+  </div>\r\n+\r\n+  <div className=\"form-row\">\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n+      <select\r\n+        name=\"bookCategory\"\r\n+        value={formData.bookCategory}\r\n+        className=\"input-select\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      >\r\n+        <option value=\"\" disabled>Select a category</option>\r\n+        {categories.map((category) => (\r\n+          <option key={category} value={category}>\r\n+            {category}\r\n+          </option>\r\n+        ))}\r\n+      </select>\r\n+    </div>\r\n+    <div className=\"form-group half-width\">\r\n+      <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n+      <select\r\n+        name=\"bookLanguage\"\r\n+        value={formData.bookLanguage}\r\n+        className=\"input-select\"\r\n+        onChange={handleInputChange}\r\n+        required\r\n+      >\r\n+        <option value=\"\" disabled>Select a language</option>\r\n+        {africanLanguages.map((language) => (\r\n+          <option key={language} value={language}>\r\n+            {language}\r\n+          </option>\r\n+        ))}\r\n+      </select>\r\n+    </div>\r\n+  </div>\r\n+\r\n+  <div className=\"form-group\">\r\n+    <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n+    <textarea\r\n+      name=\"bookDescription\"\r\n+      value={formData.bookDescription}\r\n+      className=\"input-textarea\"\r\n+      onChange={handleInputChange}\r\n+      required\r\n+    />\r\n+  </div>\r\n+\r\n+  <div className=\"form-group\">\r\n+    <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n+    <input\r\n+      type=\"file\"\r\n+      name=\"bookFile\"\r\n+      accept=\".pdf, .epub\"\r\n+      className=\"input-text\"\r\n+      onChange={handleInputChange}\r\n+    />\r\n+  </div>\r\n+\r\n+  <div className=\"form-group\">\r\n+    <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n+      {addingBook ? 'Adding...' : 'Add Book'}\r\n+    </button>\r\n+  </div>\r\n+</form>\r\n+\r\n+      </div>\r\n+      <Footer />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AddBook;\r\n+\r\n"
                },
                {
                    "date": 1740317947218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,227 +37,9 @@\n   const bookAdder = async (e) => {\r\n     e.preventDefault();\r\n     try {\r\n       const token = localStorage.getItem('token');\r\n-console.log(token)\r\n-      const bookCover = await handleFileUpload(formData.bookCover);\r\n-      const bookFile = await handleFileUpload(formData.bookFile);\r\n \r\n-      const { data } = await addBook({\r\n-        variables: {\r\n-          addbook: {\r\n-            bookName: formData.bookName,\r\n-            bookDescription: formData.bookDescription,\r\n-            bookAuthor: formData.bookAuthor,\r\n-            bookCategory: formData.bookCategory,\r\n-            bookLanguage: formData.bookLanguage,\r\n-            bookCover,\r\n-            bookFile,\r\n-          },\r\n-        },\r\n-        context: {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        },\r\n-      });\r\n-\r\n-      console.log('Book added successfully!', data);\r\n-      navigate('/home');\r\n-    } catch (err) {\r\n-      console.error('Error adding book:', err.message);\r\n-    }\r\n-  };\r\n-\r\n-  const categories = [\r\n-    'Fiction',\r\n-    'Non-Fiction',\r\n-    'Science',\r\n-    'History',\r\n-    'Biography',\r\n-    'Fantasy',\r\n-    'Education',\r\n-  ];\r\n-\r\n-  const africanLanguages = [\r\n-    'Swahili',\r\n-    'Yoruba',\r\n-    'Zulu',\r\n-    'Amharic',\r\n-    'Hausa',\r\n-    'Somali',\r\n-    'Shona',\r\n-    'Oromo',\r\n-    'Fulbe',\r\n-    'Wollof',\r\n-    'Xhosa',\r\n-    'Afar',\r\n-    'Akan',\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"container\">\r\n-      <Navbar />\r\n-      <div className=\"form-container\">\r\n-        <h2>Add a New Book</h2>\r\n-        {addBookError && (\r\n-          <p className=\"errorMsg\">\r\n-            {addBookError.message || 'An unexpected error occurred.'}\r\n-          </p>\r\n-        )}\r\n-        \r\n-        <form className=\"create\" onSubmit={bookAdder}>\r\n-  <div className=\"form-group\">\r\n-    <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n-    <input\r\n-      type=\"file\"\r\n-      name=\"bookCover\"\r\n-      accept=\".png, .jpg, .jpeg\"\r\n-      className=\"input-text\"\r\n-      onChange={handleInputChange}\r\n-    />\r\n-  </div>\r\n-\r\n-  <div className=\"form-row\">\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n-      <input\r\n-        type=\"text\"\r\n-        name=\"bookName\"\r\n-        value={formData.bookName}\r\n-        className=\"input-text\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      />\r\n-    </div>\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n-      <input\r\n-        type=\"text\"\r\n-        name=\"bookAuthor\"\r\n-        value={formData.bookAuthor}\r\n-        className=\"input-text\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      />\r\n-    </div>\r\n-  </div>\r\n-\r\n-  <div className=\"form-row\">\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n-      <select\r\n-        name=\"bookCategory\"\r\n-        value={formData.bookCategory}\r\n-        className=\"input-select\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      >\r\n-        <option value=\"\" disabled>Select a category</option>\r\n-        {categories.map((category) => (\r\n-          <option key={category} value={category}>\r\n-            {category}\r\n-          </option>\r\n-        ))}\r\n-      </select>\r\n-    </div>\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n-      <select\r\n-        name=\"bookLanguage\"\r\n-        value={formData.bookLanguage}\r\n-        className=\"input-select\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      >\r\n-        <option value=\"\" disabled>Select a language</option>\r\n-        {africanLanguages.map((language) => (\r\n-          <option key={language} value={language}>\r\n-            {language}\r\n-          </option>\r\n-        ))}\r\n-      </select>\r\n-    </div>\r\n-  </div>\r\n-\r\n-  <div className=\"form-group\">\r\n-    <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n-    <textarea\r\n-      name=\"bookDescription\"\r\n-      value={formData.bookDescription}\r\n-      className=\"input-textarea\"\r\n-      onChange={handleInputChange}\r\n-      required\r\n-    />\r\n-  </div>\r\n-\r\n-  <div className=\"form-group\">\r\n-    <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n-    <input\r\n-      type=\"file\"\r\n-      name=\"bookFile\"\r\n-      accept=\".pdf, .epub\"\r\n-      className=\"input-text\"\r\n-      onChange={handleInputChange}\r\n-    />\r\n-  </div>\r\n-\r\n-  <div className=\"form-group\">\r\n-    <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n-      {addingBook ? 'Adding...' : 'Add Book'}\r\n-    </button>\r\n-  </div>\r\n-</form>\r\n-\r\n-      </div>\r\n-      <Footer />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AddBook;\r\n-\r\n-import '../css/AddBook.css';\r\n-import { useState } from 'react';\r\n-import { useNavigate } from 'react-router-dom';\r\n-import { ADDBOOK } from '../graphql/mutations';\r\n-import { useMutation } from '@apollo/client';\r\n-import Navbar from '../layout/Navbar';\r\n-import Footer from '../layout/Footer';\r\n-\r\n-const AddBook = () => {\r\n-  const navigate = useNavigate();\r\n-  const [formData, setFormData] = useState({\r\n-    bookCover: null,\r\n-    bookName: '',\r\n-    bookDescription: '',\r\n-    bookAuthor: '',\r\n-    bookCategory: '',\r\n-    bookLanguage: '',\r\n-    bookFile: null,\r\n-  });\r\n-\r\n-  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n-\r\n-  const handleInputChange = (e) => {\r\n-    const { name, value, files } = e.target;\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      [name]: files ? files[0] : value,\r\n-    }));\r\n-  };\r\n-\r\n-  const handleFileUpload = async (file) => {\r\n-    if (!file) return null;\r\n-    // Simulate file upload logic if needed\r\n-    return file;\r\n-  };\r\n-\r\n-  const bookAdder = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-console.log\r\n       const bookCover = await handleFileUpload(formData.bookCover);\r\n       const bookFile = await handleFileUpload(formData.bookFile);\r\n \r\n       const { data } = await addBook({\r\n@@ -433,222 +215,4 @@\n };\r\n \r\n export default AddBook;\r\n \r\n-import '../css/AddBook.css';\r\n-import { useState } from 'react';\r\n-import { useNavigate } from 'react-router-dom';\r\n-import { ADDBOOK } from '../graphql/mutations';\r\n-import { useMutation } from '@apollo/client';\r\n-import Navbar from '../layout/Navbar';\r\n-import Footer from '../layout/Footer';\r\n-\r\n-const AddBook = () => {\r\n-  const navigate = useNavigate();\r\n-  const [formData, setFormData] = useState({\r\n-    bookCover: null,\r\n-    bookName: '',\r\n-    bookDescription: '',\r\n-    bookAuthor: '',\r\n-    bookCategory: '',\r\n-    bookLanguage: '',\r\n-    bookFile: null,\r\n-  });\r\n-\r\n-  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n-\r\n-  const handleInputChange = (e) => {\r\n-    const { name, value, files } = e.target;\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      [name]: files ? files[0] : value,\r\n-    }));\r\n-  };\r\n-\r\n-  const handleFileUpload = async (file) => {\r\n-    if (!file) return null;\r\n-    // Simulate file upload logic if needed\r\n-    return file;\r\n-  };\r\n-\r\n-  const bookAdder = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-c\r\n-      const bookCover = await handleFileUpload(formData.bookCover);\r\n-      const bookFile = await handleFileUpload(formData.bookFile);\r\n-\r\n-      const { data } = await addBook({\r\n-        variables: {\r\n-          addbook: {\r\n-            bookName: formData.bookName,\r\n-            bookDescription: formData.bookDescription,\r\n-            bookAuthor: formData.bookAuthor,\r\n-            bookCategory: formData.bookCategory,\r\n-            bookLanguage: formData.bookLanguage,\r\n-            bookCover,\r\n-            bookFile,\r\n-          },\r\n-        },\r\n-        context: {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        },\r\n-      });\r\n-\r\n-      console.log('Book added successfully!', data);\r\n-      navigate('/home');\r\n-    } catch (err) {\r\n-      console.error('Error adding book:', err.message);\r\n-    }\r\n-  };\r\n-\r\n-  const categories = [\r\n-    'Fiction',\r\n-    'Non-Fiction',\r\n-    'Science',\r\n-    'History',\r\n-    'Biography',\r\n-    'Fantasy',\r\n-    'Education',\r\n-  ];\r\n-\r\n-  const africanLanguages = [\r\n-    'Swahili',\r\n-    'Yoruba',\r\n-    'Zulu',\r\n-    'Amharic',\r\n-    'Hausa',\r\n-    'Somali',\r\n-    'Shona',\r\n-    'Oromo',\r\n-    'Fulbe',\r\n-    'Wollof',\r\n-    'Xhosa',\r\n-    'Afar',\r\n-    'Akan',\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"container\">\r\n-      <Navbar />\r\n-      <div className=\"form-container\">\r\n-        <h2>Add a New Book</h2>\r\n-        {addBookError && (\r\n-          <p className=\"errorMsg\">\r\n-            {addBookError.message || 'An unexpected error occurred.'}\r\n-          </p>\r\n-        )}\r\n-        \r\n-        <form className=\"create\" onSubmit={bookAdder}>\r\n-  <div className=\"form-group\">\r\n-    <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n-    <input\r\n-      type=\"file\"\r\n-      name=\"bookCover\"\r\n-      accept=\".png, .jpg, .jpeg\"\r\n-      className=\"input-text\"\r\n-      onChange={handleInputChange}\r\n-    />\r\n-  </div>\r\n-\r\n-  <div className=\"form-row\">\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n-      <input\r\n-        type=\"text\"\r\n-        name=\"bookName\"\r\n-        value={formData.bookName}\r\n-        className=\"input-text\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      />\r\n-    </div>\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n-      <input\r\n-        type=\"text\"\r\n-        name=\"bookAuthor\"\r\n-        value={formData.bookAuthor}\r\n-        className=\"input-text\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      />\r\n-    </div>\r\n-  </div>\r\n-\r\n-  <div className=\"form-row\">\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n-      <select\r\n-        name=\"bookCategory\"\r\n-        value={formData.bookCategory}\r\n-        className=\"input-select\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      >\r\n-        <option value=\"\" disabled>Select a category</option>\r\n-        {categories.map((category) => (\r\n-          <option key={category} value={category}>\r\n-            {category}\r\n-          </option>\r\n-        ))}\r\n-      </select>\r\n-    </div>\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n-      <select\r\n-        name=\"bookLanguage\"\r\n-        value={formData.bookLanguage}\r\n-        className=\"input-select\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      >\r\n-        <option value=\"\" disabled>Select a language</option>\r\n-        {africanLanguages.map((language) => (\r\n-          <option key={language} value={language}>\r\n-            {language}\r\n-          </option>\r\n-        ))}\r\n-      </select>\r\n-    </div>\r\n-  </div>\r\n-\r\n-  <div className=\"form-group\">\r\n-    <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n-    <textarea\r\n-      name=\"bookDescription\"\r\n-      value={formData.bookDescription}\r\n-      className=\"input-textarea\"\r\n-      onChange={handleInputChange}\r\n-      required\r\n-    />\r\n-  </div>\r\n-\r\n-  <div className=\"form-group\">\r\n-    <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n-    <input\r\n-      type=\"file\"\r\n-      name=\"bookFile\"\r\n-      accept=\".pdf, .epub\"\r\n-      className=\"input-text\"\r\n-      onChange={handleInputChange}\r\n-    />\r\n-  </div>\r\n-\r\n-  <div className=\"form-group\">\r\n-    <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n-      {addingBook ? 'Adding...' : 'Add Book'}\r\n-    </button>\r\n-  </div>\r\n-</form>\r\n-\r\n-      </div>\r\n-      <Footer />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AddBook;\r\n-\r\n"
                },
                {
                    "date": 1740318071853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,218 +0,0 @@\n-import '../css/AddBook.css';\r\n-import { useState } from 'react';\r\n-import { useNavigate } from 'react-router-dom';\r\n-import { ADDBOOK } from '../graphql/mutations';\r\n-import { useMutation } from '@apollo/client';\r\n-import Navbar from '../layout/Navbar';\r\n-import Footer from '../layout/Footer';\r\n-\r\n-const AddBook = () => {\r\n-  const navigate = useNavigate();\r\n-  const [formData, setFormData] = useState({\r\n-    bookCover: null,\r\n-    bookName: '',\r\n-    bookDescription: '',\r\n-    bookAuthor: '',\r\n-    bookCategory: '',\r\n-    bookLanguage: '',\r\n-    bookFile: null,\r\n-  });\r\n-\r\n-  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n-\r\n-  const handleInputChange = (e) => {\r\n-    const { name, value, files } = e.target;\r\n-    setFormData((prev) => ({\r\n-      ...prev,\r\n-      [name]: files ? files[0] : value,\r\n-    }));\r\n-  };\r\n-\r\n-  const handleFileUpload = async (file) => {\r\n-    if (!file) return null;\r\n-    // Simulate file upload logic if needed\r\n-    return file;\r\n-  };\r\n-\r\n-  const bookAdder = async (e) => {\r\n-    e.preventDefault();\r\n-    try {\r\n-      const token = localStorage.getItem('token');\r\n-\r\n-      const bookCover = await handleFileUpload(formData.bookCover);\r\n-      const bookFile = await handleFileUpload(formData.bookFile);\r\n-\r\n-      const { data } = await addBook({\r\n-        variables: {\r\n-          addbook: {\r\n-            bookName: formData.bookName,\r\n-            bookDescription: formData.bookDescription,\r\n-            bookAuthor: formData.bookAuthor,\r\n-            bookCategory: formData.bookCategory,\r\n-            bookLanguage: formData.bookLanguage,\r\n-            bookCover,\r\n-            bookFile,\r\n-          },\r\n-        },\r\n-        context: {\r\n-          headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-          },\r\n-        },\r\n-      });\r\n-\r\n-      console.log('Book added successfully!', data);\r\n-      navigate('/home');\r\n-    } catch (err) {\r\n-      console.error('Error adding book:', err.message);\r\n-    }\r\n-  };\r\n-\r\n-  const categories = [\r\n-    'Fiction',\r\n-    'Non-Fiction',\r\n-    'Science',\r\n-    'History',\r\n-    'Biography',\r\n-    'Fantasy',\r\n-    'Education',\r\n-  ];\r\n-\r\n-  const africanLanguages = [\r\n-    'Swahili',\r\n-    'Yoruba',\r\n-    'Zulu',\r\n-    'Amharic',\r\n-    'Hausa',\r\n-    'Somali',\r\n-    'Shona',\r\n-    'Oromo',\r\n-    'Fulbe',\r\n-    'Wollof',\r\n-    'Xhosa',\r\n-    'Afar',\r\n-    'Akan',\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"container\">\r\n-      <Navbar />\r\n-      <div className=\"form-container\">\r\n-        <h2>Add a New Book</h2>\r\n-        {addBookError && (\r\n-          <p className=\"errorMsg\">\r\n-            {addBookError.message || 'An unexpected error occurred.'}\r\n-          </p>\r\n-        )}\r\n-        \r\n-        <form className=\"create\" onSubmit={bookAdder}>\r\n-  <div className=\"form-group\">\r\n-    <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n-    <input\r\n-      type=\"file\"\r\n-      name=\"bookCover\"\r\n-      accept=\".png, .jpg, .jpeg\"\r\n-      className=\"input-text\"\r\n-      onChange={handleInputChange}\r\n-    />\r\n-  </div>\r\n-\r\n-  <div className=\"form-row\">\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n-      <input\r\n-        type=\"text\"\r\n-        name=\"bookName\"\r\n-        value={formData.bookName}\r\n-        className=\"input-text\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      />\r\n-    </div>\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n-      <input\r\n-        type=\"text\"\r\n-        name=\"bookAuthor\"\r\n-        value={formData.bookAuthor}\r\n-        className=\"input-text\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      />\r\n-    </div>\r\n-  </div>\r\n-\r\n-  <div className=\"form-row\">\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n-      <select\r\n-        name=\"bookCategory\"\r\n-        value={formData.bookCategory}\r\n-        className=\"input-select\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      >\r\n-        <option value=\"\" disabled>Select a category</option>\r\n-        {categories.map((category) => (\r\n-          <option key={category} value={category}>\r\n-            {category}\r\n-          </option>\r\n-        ))}\r\n-      </select>\r\n-    </div>\r\n-    <div className=\"form-group half-width\">\r\n-      <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n-      <select\r\n-        name=\"bookLanguage\"\r\n-        value={formData.bookLanguage}\r\n-        className=\"input-select\"\r\n-        onChange={handleInputChange}\r\n-        required\r\n-      >\r\n-        <option value=\"\" disabled>Select a language</option>\r\n-        {africanLanguages.map((language) => (\r\n-          <option key={language} value={language}>\r\n-            {language}\r\n-          </option>\r\n-        ))}\r\n-      </select>\r\n-    </div>\r\n-  </div>\r\n-\r\n-  <div className=\"form-group\">\r\n-    <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n-    <textarea\r\n-      name=\"bookDescription\"\r\n-      value={formData.bookDescription}\r\n-      className=\"input-textarea\"\r\n-      onChange={handleInputChange}\r\n-      required\r\n-    />\r\n-  </div>\r\n-\r\n-  <div className=\"form-group\">\r\n-    <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n-    <input\r\n-      type=\"file\"\r\n-      name=\"bookFile\"\r\n-      accept=\".pdf, .epub\"\r\n-      className=\"input-text\"\r\n-      onChange={handleInputChange}\r\n-    />\r\n-  </div>\r\n-\r\n-  <div className=\"form-group\">\r\n-    <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n-      {addingBook ? 'Adding...' : 'Add Book'}\r\n-    </button>\r\n-  </div>\r\n-</form>\r\n-\r\n-      </div>\r\n-      <Footer />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AddBook;\r\n-\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740318152165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,221 @@\n-\n+import '../css/AddBook.css';\r\n+import { useState } from 'react';\r\n+import { useNavigate } from 'react-router-dom';\r\n+import { ADDBOOK } from '../graphql/mutations';\r\n+import { useMutation } from '@apollo/client';\r\n+import Navbar from '../layout/Navbar';\r\n+import Footer from '../layout/Footer';\r\n+\r\n+const AddBook = () => {\r\n+  const navigate = useNavigate();\r\n+  \r\n+  // Initialize form state\r\n+  const [formData, setFormData] = useState({\r\n+    bookCover: null,\r\n+    bookName: '',\r\n+    bookDescription: '',\r\n+    bookAuthor: '',\r\n+    bookCategory: '',\r\n+    bookLanguage: '',\r\n+    bookFile: null,\r\n+  });\r\n+\r\n+  // Prepare mutation hook with loading and error handling\r\n+  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n+\r\n+  // Update state when input changes\r\n+  const handleInputChange = (e) => {\r\n+    const { name, value, files } = e.target;\r\n+    setFormData((prev) => ({\r\n+      ...prev,\r\n+      [name]: files ? files[0] : value,\r\n+    }));\r\n+  };\r\n+\r\n+  // A stub for file upload processing (if needed)\r\n+  const handleFileUpload = async (file) => {\r\n+    if (!file) return null;\r\n+    // Simulate file upload logic or preprocessing here if needed.\r\n+    return file;\r\n+  };\r\n+\r\n+  // Handles the addBook mutation submission\r\n+  const bookAdder = async (e) => {\r\n+    e.preventDefault();\r\n+\r\n+    try {\r\n+      // Retrieve token from local storage (ensure token is stored under the same key)\r\n+      const token = localStorage.getItem('token');\r\n+\r\n+      // Process files if provided (could be replaced with actual upload logic)\r\n+      const bookCover = await handleFileUpload(formData.bookCover);\r\n+      const bookFile = await handleFileUpload(formData.bookFile);\r\n+\r\n+      // Execute the mutation with variables and context including the token\r\n+      const { data } = await addBook({\r\n+        variables: {\r\n+          addbook: {\r\n+            bookName: formData.bookName,\r\n+            bookDescription: formData.bookDescription,\r\n+            bookAuthor: formData.bookAuthor,\r\n+            bookCategory: formData.bookCategory,\r\n+            bookLanguage: formData.bookLanguage,\r\n+            bookCover,\r\n+            bookFile,\r\n+          },\r\n+        },\r\n+        context: {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+          },\r\n+        },\r\n+      });\r\n+\r\n+      console.log('Book added successfully!', data);\r\n+      navigate('/home');\r\n+    } catch (err) {\r\n+      console.error('Error adding book:', err.message);\r\n+    }\r\n+  };\r\n+\r\n+  // Example category and language arrays\r\n+  const categories = [\r\n+    'Fiction',\r\n+    'Non-Fiction',\r\n+    'Science',\r\n+    'History',\r\n+    'Biography',\r\n+    'Fantasy',\r\n+    'Education',\r\n+  ];\r\n+\r\n+  const africanLanguages = [\r\n+    'Swahili',\r\n+    'Yoruba',\r\n+    'Zulu',\r\n+    'Amharic',\r\n+    'Hausa',\r\n+    'Somali',\r\n+    'Shona',\r\n+    'Oromo',\r\n+    'Fulbe',\r\n+    'Wollof',\r\n+    'Xhosa',\r\n+    'Afar',\r\n+    'Akan',\r\n+  ];\r\n+\r\n+  return (\r\n+    <div className=\"container\">\r\n+      <Navbar />\r\n+      <div className=\"form-container\">\r\n+        <h2>Add a New Book</h2>\r\n+        {addBookError && (\r\n+          <p className=\"errorMsg\">\r\n+            {addBookError.message || 'An unexpected error occurred.'}\r\n+          </p>\r\n+        )}\r\n+        <form className=\"create\" onSubmit={bookAdder}>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n+            <input\r\n+              type=\"file\"\r\n+              name=\"bookCover\"\r\n+              accept=\".png, .jpg, .jpeg\"\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-row\">\r\n+            <div className=\"form-group half-width\">\r\n+              <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"bookName\"\r\n+                value={formData.bookName}\r\n+                className=\"input-text\"\r\n+                onChange={handleInputChange}\r\n+                required\r\n+              />\r\n+            </div>\r\n+            <div className=\"form-group half-width\">\r\n+              <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n+              <input\r\n+                type=\"text\"\r\n+                name=\"bookAuthor\"\r\n+                value={formData.bookAuthor}\r\n+                className=\"input-text\"\r\n+                onChange={handleInputChange}\r\n+                required\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"form-row\">\r\n+            <div className=\"form-group half-width\">\r\n+              <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n+              <select\r\n+                name=\"bookCategory\"\r\n+                value={formData.bookCategory}\r\n+                className=\"input-select\"\r\n+                onChange={handleInputChange}\r\n+                required\r\n+              >\r\n+                <option value=\"\" disabled>Select a category</option>\r\n+                {categories.map((category) => (\r\n+                  <option key={category} value={category}>\r\n+                    {category}\r\n+                  </option>\r\n+                ))}\r\n+              </select>\r\n+            </div>\r\n+            <div className=\"form-group half-width\">\r\n+              <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n+              <select\r\n+                name=\"bookLanguage\"\r\n+                value={formData.bookLanguage}\r\n+                className=\"input-select\"\r\n+                onChange={handleInputChange}\r\n+                required\r\n+              >\r\n+                <option value=\"\" disabled>Select a language</option>\r\n+                {africanLanguages.map((language) => (\r\n+                  <option key={language} value={language}>\r\n+                    {language}\r\n+                  </option>\r\n+                ))}\r\n+              </select>\r\n+            </div>\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n+            <textarea\r\n+              name=\"bookDescription\"\r\n+              value={formData.bookDescription}\r\n+              className=\"input-textarea\"\r\n+              onChange={handleInputChange}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n+            <input\r\n+              type=\"file\"\r\n+              name=\"bookFile\"\r\n+              accept=\".pdf, .epub\"\r\n+              className=\"input-text\"\r\n+              onChange={handleInputChange}\r\n+            />\r\n+          </div>\r\n+          <div className=\"form-group\">\r\n+            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n+              {addingBook ? 'Adding...' : 'Add Book'}\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </div>\r\n+      <Footer />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AddBook;\r\n"
                },
                {
                    "date": 1740318727217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n import Footer from '../layout/Footer';\r\n \r\n const AddBook = () => {\r\n   const navigate = useNavigate();\r\n-  \r\n-  // Initialize form state\r\n+\r\n+  // Initialize state for form inputs\r\n   const [formData, setFormData] = useState({\r\n     bookCover: null,\r\n     bookName: '',\r\n     bookDescription: '',\r\n@@ -19,40 +19,39 @@\n     bookLanguage: '',\r\n     bookFile: null,\r\n   });\r\n \r\n-  // Prepare mutation hook with loading and error handling\r\n+  // Mutation hook with loading and error tracking\r\n   const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n \r\n-  // Update state when input changes\r\n+  // Handle changes for text and file inputs\r\n   const handleInputChange = (e) => {\r\n     const { name, value, files } = e.target;\r\n     setFormData((prev) => ({\r\n       ...prev,\r\n       [name]: files ? files[0] : value,\r\n     }));\r\n   };\r\n \r\n-  // A stub for file upload processing (if needed)\r\n+  // Stub for file upload processing (if needed)\r\n   const handleFileUpload = async (file) => {\r\n     if (!file) return null;\r\n-    // Simulate file upload logic or preprocessing here if needed.\r\n+    // You can add file preprocessing here if needed.\r\n     return file;\r\n   };\r\n \r\n-  // Handles the addBook mutation submission\r\n+  // Form submission handler for adding a book\r\n   const bookAdder = async (e) => {\r\n     e.preventDefault();\r\n-\r\n     try {\r\n-      // Retrieve token from local storage (ensure token is stored under the same key)\r\n+      // Retrieve token from local storage\r\n       const token = localStorage.getItem('token');\r\n-\r\n-      // Process files if provided (could be replaced with actual upload logic)\r\n+      \r\n+      // Process file uploads (this can be replaced with actual logic)\r\n       const bookCover = await handleFileUpload(formData.bookCover);\r\n       const bookFile = await handleFileUpload(formData.bookFile);\r\n \r\n-      // Execute the mutation with variables and context including the token\r\n+      // Execute the mutation with variables and pass the token in the context\r\n       const { data } = await addBook({\r\n         variables: {\r\n           addbook: {\r\n             bookName: formData.bookName,\r\n@@ -77,9 +76,9 @@\n       console.error('Error adding book:', err.message);\r\n     }\r\n   };\r\n \r\n-  // Example category and language arrays\r\n+  // Sample category and language arrays\r\n   const categories = [\r\n     'Fiction',\r\n     'Non-Fiction',\r\n     'Science',\r\n"
                },
                {
                    "date": 1741701944391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,8 +96,9 @@\n     'Hausa',\r\n     'Somali',\r\n     'Shona',\r\n     'Oromo',\r\n+    \r\n     'Fulbe',\r\n     'Wollof',\r\n     'Xhosa',\r\n     'Afar',\r\n"
                },
                {
                    "date": 1741701950534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n     'Hausa',\r\n     'Somali',\r\n     'Shona',\r\n     'Oromo',\r\n-    \r\n+     '',\r\n     'Fulbe',\r\n     'Wollof',\r\n     'Xhosa',\r\n     'Afar',\r\n"
                },
                {
                    "date": 1741701971082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,5 +217,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default AddBook;\r\n\\ No newline at end of file\n+export default AddBook;\r\n"
                },
                {
                    "date": 1741701980083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,10 +96,10 @@\n     'Hausa',\r\n     'Somali',\r\n     'Shona',\r\n     'Oromo',\r\n-     '',\r\n-    'Fulbe',\r\n+     'Igbo',\r\n+    'Fulb/Fulani',\r\n     'Wollof',\r\n     'Xhosa',\r\n     'Afar',\r\n     'Akan',\r\n@@ -218,5 +218,4 @@\n   );\r\n };\r\n \r\n export default AddBook;\r\n-\n"
                },
                {
                    "date": 1741701987412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n     'Somali',\r\n     'Shona',\r\n     'Oromo',\r\n      'Igbo',\r\n-    'Fulb/Fulani',\r\n+    'Fulbe/pul',\r\n     'Wollof',\r\n     'Xhosa',\r\n     'Afar',\r\n     'Akan',\r\n"
                },
                {
                    "date": 1741701995094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n     'Somali',\r\n     'Shona',\r\n     'Oromo',\r\n      'Igbo',\r\n-    'Fulbe/pul',\r\n+    'Fulbe/Pula',\r\n     'Wollof',\r\n     'Xhosa',\r\n     'Afar',\r\n     'Akan',\r\n"
                },
                {
                    "date": 1741702000432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,5 +217,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default AddBook;\r\n\\ No newline at end of file\n+export default AddBook;\r\n"
                },
                {
                    "date": 1741702050068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n     'Somali',\r\n     'Shona',\r\n     'Oromo',\r\n      'Igbo',\r\n-    'Fulbe/Pula',\r\n+    'Fulani',\r\n     'Wollof',\r\n     'Xhosa',\r\n     'Afar',\r\n     'Akan',\r\n@@ -218,5 +218,4 @@\n   );\r\n };\r\n \r\n export default AddBook;\r\n-\n"
                }
            ],
            "date": 1736577395438,
            "name": "Commit-0",
            "content": "import '../css/AddBook.css';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ADDBOOK } from '../graphql/mutations';\r\nimport { useMutation } from '@apollo/client';\r\nimport Navbar from '../layout/Navbar';\r\nimport Footer from '../layout/Footer';\r\n\r\nconst MemoizedNavbar = React.memo(Navbar);\r\nconst MemoizedFooter = React.memo(Footer);\r\n\r\nconst categories = [\r\n  'Fiction', 'Non-Fiction', 'Science', 'History', \r\n  'Biography', 'Fantasy', 'Education',\r\n];\r\n\r\nconst africanLanguages = [\r\n  'Swahili', 'Yoruba', 'Zulu', 'Amharic', 'Hausa',\r\n  'Somali', 'Shona', 'Oromo', 'Fulbe', 'Wollof',\r\n  'Xhosa', 'Afar', 'Akan',\r\n];\r\n\r\nconst AddBook = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    bookCover: null,\r\n    bookName: '',\r\n    bookDescription: '',\r\n    bookAuthor: '',\r\n    bookCategory: '',\r\n    bookLanguage: '',\r\n    bookFile: null,\r\n  });\r\n  const [addBook, { loading: addingBook, error: addBookError }] = useMutation(ADDBOOK);\r\n\r\n  const handleInputChange = useCallback((e) => {\r\n    const { name, value, files } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: files ? files[0] : value,\r\n    }));\r\n  }, []);\r\n\r\n  const handleFileUpload = async (file) => {\r\n    if (!file) return null;\r\n    return file;\r\n  };\r\n\r\n  const bookAdder = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const bookCover = await handleFileUpload(formData.bookCover);\r\n      const bookFile = await handleFileUpload(formData.bookFile);\r\n\r\n      const { data } = await addBook({\r\n        variables: {\r\n          addbook: {\r\n            bookName: formData.bookName.trim(),\r\n            bookDescription: formData.bookDescription.trim(),\r\n            bookAuthor: formData.bookAuthor.trim(),\r\n            bookCategory: formData.bookCategory,\r\n            bookLanguage: formData.bookLanguage,\r\n            bookCover,\r\n            bookFile,\r\n          },\r\n        },\r\n        context: {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        },\r\n      });\r\n\r\n      console.log('Book added successfully!', data);\r\n      navigate('/home');\r\n    } catch (err) {\r\n      console.error('Error adding book:', err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <MemoizedNavbar />\r\n      <div className=\"form-container\">\r\n        <h2>Add a New Book</h2>\r\n        {addBookError && (\r\n          <p className=\"errorMsg\">\r\n            {addBookError.message || 'An unexpected error occurred.'}\r\n          </p>\r\n        )}\r\n        <form className=\"create\" onSubmit={bookAdder}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"bookCover\" className=\"label\">Book Cover</label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"bookCover\"\r\n              accept=\".png, .jpg, .jpeg\"\r\n              className=\"input-text\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"bookName\" className=\"label\">Book Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"bookName\"\r\n              value={formData.bookName}\r\n              className=\"input-text\"\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"bookAuthor\" className=\"label\">Author</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"bookAuthor\"\r\n              value={formData.bookAuthor}\r\n              className=\"input-text\"\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"bookDescription\" className=\"label\">Description</label>\r\n            <textarea\r\n              name=\"bookDescription\"\r\n              value={formData.bookDescription}\r\n              className=\"input-textarea\"\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"bookCategory\" className=\"label\">Category</label>\r\n            <select\r\n              name=\"bookCategory\"\r\n              value={formData.bookCategory}\r\n              className=\"input-select\"\r\n              onChange={handleInputChange}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>Select a category</option>\r\n              {categories.map((category) => (\r\n                <option key={category} value={category}>{category}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"bookLanguage\" className=\"label\">Language</label>\r\n            <select\r\n              name=\"bookLanguage\"\r\n              value={formData.bookLanguage}\r\n              className=\"input-select\"\r\n              onChange={handleInputChange}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>Select a language</option>\r\n              {africanLanguages.map((language) => (\r\n                <option key={language} value={language}>{language}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"bookFile\" className=\"label\">Book File</label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"bookFile\"\r\n              accept=\".pdf, .epub\"\r\n              className=\"input-text\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn-submit\" disabled={addingBook}>\r\n              {addingBook ? 'Adding Book...' : 'Add Book'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <MemoizedFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBook;\r\n"
        }
    ]
}