{
    "sourceFile": "client/src/pages/Home.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1736560708542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736560718639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             <aside className=\"categories-sidebar\">\r\n                 <Categories />\r\n             </aside>\r\n     \r\n-           {} <main className=\"catalog-section\">\r\n+           {a} <main className=\"catalog-section\">\r\n                 <div className=\"catalog-grid\">\r\n                     {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n                         <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n                             <Books\r\n"
                },
                {
                    "date": 1736560725368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {allBooks?} <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main>\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560732562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {allBooks? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main>}\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560749332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {allBooks? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> : null}\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560796885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    \r\n+if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {allBooks? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> : null}\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560811450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    \r\n+// if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> : null}\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560818430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    \r\n+// if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {!? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> : null}\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560823951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             <aside className=\"categories-sidebar\">\r\n                 <Categories />\r\n             </aside>\r\n     \r\n-           {!? <main className=\"catalog-section\">\r\n+           {!loading? <main className=\"catalog-section\">\r\n                 <div className=\"catalog-grid\">\r\n                     {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n                         <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n                             <Books\r\n@@ -96,598 +96,4 @@\n     );\r\n };\r\n \r\n export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    \r\n-// if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {? <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> : null}\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    \r\n-if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {allBooks? <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> : null}\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {allBooks? <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> : null}\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {allBooks? <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main>}\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {allBooks?} <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main>\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {a} <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main>\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n"
                },
                {
                    "date": 1736560863196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    \r\n+// if (loading) return ;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {!loading ? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> : null}\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : <p>Loading...</p>null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560918482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {!loading ? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> : null}\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : <p>Loading...</p>}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560952089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {!loading: null ? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> }\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : <p>Loading...</p>}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560959768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {!loading: null ? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> }\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : <p>Loading...</p>}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560967631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             <aside className=\"categories-sidebar\">\r\n                 <Categories />\r\n             </aside>\r\n     \r\n-           {!loading ? <main className=\"catalog-section\">\r\n+           {loading ? <main className=\"catalog-section\">\r\n                 <div className=\"catalog-grid\">\r\n                     {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n                         <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n                             <Books\r\n"
                },
                {
                    "date": 1736560976669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n                     >\r\n                         ►\r\n                     </button>\r\n                 </div>\r\n-            </main> }\r\n+            </main>}\r\n         </div>\r\n     \r\n         {role === 'admin' || role === 'superAdmin' ? (\r\n             <button className=\"addBook\">\r\n"
                },
                {
                    "date": 1736560984192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {loading ? :<main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> }\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : <p>Loading...</p>}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560991360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {loading ? p : <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> }\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : <p>Loading...</p>}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736560997607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {loading ? <p>Loading</p> : <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> }\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : <p>Loading...</p>}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736561104249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         variables: { page: currentPage, perPage },\r\n     });\r\n \r\n     \r\n-// if (loading) return ;\r\n+// if (loading) return <p>Loading...</p>;\r\n     if (error) return <p>Error: {error.message}</p>;\r\n     const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n \r\n     const handlePreviousPage = () => {\r\n@@ -87,9 +87,9 @@\n                 <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n                     +\r\n                 </Link>\r\n             </button>\r\n-        ) : <p>Loading...</p>null}\r\n+        ) : null}\r\n     \r\n         <Footer />\r\n     </div>\r\n     \r\n"
                },
                {
                    "date": 1736561117047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+           {allBooks? <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main> :}\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736561874868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,14 +39,19 @@\n     return (\r\n         <div className=\"home\">\r\n         <Navbar />\r\n         <Search />\r\n+        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n+                 <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n+            <Link  className='donate-msg'  to='' style={{ color:'#18500A'}}> \r\n+        <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n+        </Link>  </div>\r\n         <div className=\"content\">\r\n             <aside className=\"categories-sidebar\">\r\n                 <Categories />\r\n             </aside>\r\n     \r\n-           {allBooks? <main className=\"catalog-section\">\r\n+            <main className=\"catalog-section\">\r\n                 <div className=\"catalog-grid\">\r\n                     {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n                         <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n                             <Books\r\n@@ -78,9 +83,9 @@\n                     >\r\n                         ►\r\n                     </button>\r\n                 </div>\r\n-            </main> :}\r\n+            </main>\r\n         </div>\r\n     \r\n         {role === 'admin' || role === 'superAdmin' ? (\r\n             <button className=\"addBook\">\r\n@@ -96,790 +101,4 @@\n     );\r\n };\r\n \r\n export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {loading ? <p>Loading</p> : <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> }\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : <p>Loading...</p>}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {loading ? p : <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> }\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : <p>Loading...</p>}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {loading ? :<main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> }\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : <p>Loading...</p>}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {!loading: null ? <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main>}\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : <p>Loading...</p>}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {!loading: null ? <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> }\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : <p>Loading...</p>}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {loading ? <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> : null}\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : <p>Loading...</p>}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    \r\n-// if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {!loading ? <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> : null}\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    \r\n-// if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-           {!loading? <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main> : null}\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n"
                },
                {
                    "date": 1736561882068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n+                 <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n+            <Link  className='donate-msg'  to='' style={{ color:'#18500A'}}> \r\n+        <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n+        </Link>  \r\n+        </div>\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+            <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main>\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736562116635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import VolunteerActivismIcon from '@mui/icons-material/VolunteerActivism';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n+                 <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n+            <Link  className='donate-msg'  to='' style={{ color:'#18500A'}}> \r\n+        <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n+        </Link>  \r\n+           </div>\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+            <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main>\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736562132233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import VolunteerActivismIcon from '@mui/icons-material/VolunteerActivism';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n+                 <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n+            <Link  className='donate-msg'  to='/' style={{ color:'#18500A'}}> \r\n+        <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n+        </Link>  \r\n+           </div>\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+            <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main>\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736562195542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,14 +40,14 @@\n     return (\r\n         <div className=\"home\">\r\n         <Navbar />\r\n         <Search />\r\n-        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n+        {/* <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n                  <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n-            <Link  className='donate-msg'  to='/' style={{ color:'#18500A'}}> \r\n+            <Link  className='donate-msg'  to='/donate' style={{ color:'#18500A'}}> \r\n         <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n         </Link>  \r\n-           </div>\r\n+           </div> */}\r\n         <div className=\"content\">\r\n             <aside className=\"categories-sidebar\">\r\n                 <Categories />\r\n             </aside>\r\n@@ -103,319 +103,4 @@\n     );\r\n };\r\n \r\n export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import VolunteerActivismIcon from '@mui/icons-material/VolunteerActivism';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n-                 <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n-            <Link  className='donate-msg'  to='' style={{ color:'#18500A'}}> \r\n-        <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n-        </Link>  \r\n-           </div>\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-            <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main>\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n-                 <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n-            <Link  className='donate-msg'  to='' style={{ color:'#18500A'}}> \r\n-        <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n-        </Link>  \r\n-        </div>\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-            <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main>\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n-import '../css/Home.css'; \r\n-import Search from '../layout/Search.jsx';\r\n-import Categories from '../layout/Categories.jsx'; \r\n-import Navbar from '../layout/Navbar.jsx';\r\n-import Footer from '../layout/Footer.jsx';\r\n-import { useQuery } from '@apollo/client';\r\n-import { BOOKS } from '../graphql/queries.js';\r\n-import Books from '../layout/Books.jsx';\r\n-import { Link } from 'react-router-dom';\r\n-import { useState } from 'react';\r\n-\r\n-const Home = () => {\r\n-    const role = localStorage.getItem('role');\r\n-\r\n-    const [currentPage, setCurrentPage] = useState(1);\r\n-    const perPage = 9;\r\n-\r\n-    const { loading, error, data } = useQuery(BOOKS, {\r\n-        variables: { page: currentPage, perPage },\r\n-    });\r\n-\r\n-    if (loading) return <p>Loading...</p>;\r\n-    if (error) return <p>Error: {error.message}</p>;\r\n-\r\n-    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n-\r\n-    const handlePreviousPage = () => {\r\n-        if (currentPage > 1) {\r\n-            setCurrentPage(previousPage);\r\n-        }\r\n-    };\r\n-\r\n-    const handleNextPage = () => {\r\n-        if (currentPage < lastPage) {\r\n-            setCurrentPage(nextPage);\r\n-        }\r\n-    };\r\n-\r\n-    return (\r\n-        <div className=\"home\">\r\n-        <Navbar />\r\n-        <Search />\r\n-        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n-                 <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n-            <Link  className='donate-msg'  to='' style={{ color:'#18500A'}}> \r\n-        <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n-        </Link>  </div>\r\n-        <div className=\"content\">\r\n-            <aside className=\"categories-sidebar\">\r\n-                <Categories />\r\n-            </aside>\r\n-    \r\n-            <main className=\"catalog-section\">\r\n-                <div className=\"catalog-grid\">\r\n-                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n-                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n-                            <Books\r\n-                                bookCover={bookCover}\r\n-                                bookName={bookName}\r\n-                                bookAuthor={bookAuthor}\r\n-                            />\r\n-                        </Link>\r\n-                    ))}\r\n-                </div>\r\n-    \r\n-                <div className=\"pagination\">\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handlePreviousPage}\r\n-                        disabled={currentPage === 1}\r\n-                        aria-label=\"Previous page\"\r\n-                    >\r\n-                        ◄\r\n-                    </button>\r\n-                    <span className=\"page-number\">\r\n-                        Page {currentPage} of {lastPage}\r\n-                    </span>\r\n-                    <button\r\n-                        className=\"pag\"\r\n-                        onClick={handleNextPage}\r\n-                        disabled={currentPage === lastPage}\r\n-                        aria-label=\"Next page\"\r\n-                    >\r\n-                        ►\r\n-                    </button>\r\n-                </div>\r\n-            </main>\r\n-        </div>\r\n-    \r\n-        {role === 'admin' || role === 'superAdmin' ? (\r\n-            <button className=\"addBook\">\r\n-                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n-                    +\r\n-                </Link>\r\n-            </button>\r\n-        ) : null}\r\n-    \r\n-        <Footer />\r\n-    </div>\r\n-    \r\n-    );\r\n-};\r\n-\r\n-export default Home;\r\n"
                },
                {
                    "date": 1736562235188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,14 +40,14 @@\n     return (\r\n         <div className=\"home\">\r\n         <Navbar />\r\n         <Search />\r\n-        {/* <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n+        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n                  <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n             <Link  className='donate-msg'  to='/donate' style={{ color:'#18500A'}}> \r\n         <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n         </Link>  \r\n-           </div> */}\r\n+           </div>\r\n         <div className=\"content\">\r\n             <aside className=\"categories-sidebar\">\r\n                 <Categories />\r\n             </aside>\r\n"
                },
                {
                    "date": 1736562277785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import VolunteerActivismIcon from '@mui/icons-material/VolunteerActivism';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div style={{, marginTop:'80px', marginBottom:'80px'}}>\r\n+                 <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n+            <Link  className='donate-msg'  to='/donate' style={{ color:'#18500A'}}> \r\n+        <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n+        </Link>  \r\n+           </div>\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+            <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main>\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                },
                {
                    "date": 1736562287182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,5 +102,5 @@\n     \r\n     );\r\n };\r\n \r\n-export default Home;\n\\ No newline at end of file\n+export default Home;\r\n"
                },
                {
                    "date": 1736562302273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     return (\r\n         <div className=\"home\">\r\n         <Navbar />\r\n         <Search />\r\n-        <div style={{ marginTop:'80px', marginBottom:'80px'}}>\r\n+        <div style={{backgroundColor:'#50edc3', marginTop:'80px', marginBottom:'80px'}}>\r\n                  <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n             <Link  className='donate-msg'  to='/donate' style={{ color:'#18500A'}}> \r\n         <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n         </Link>  \r\n"
                },
                {
                    "date": 1736562309387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+import '../css/Home.css'; \r\n+import Search from '../layout/Search.jsx';\r\n+import Categories from '../layout/Categories.jsx'; \r\n+import Navbar from '../layout/Navbar.jsx';\r\n+import Footer from '../layout/Footer.jsx';\r\n+import VolunteerActivismIcon from '@mui/icons-material/VolunteerActivism';\r\n+import { useQuery } from '@apollo/client';\r\n+import { BOOKS } from '../graphql/queries.js';\r\n+import Books from '../layout/Books.jsx';\r\n+import { Link } from 'react-router-dom';\r\n+import { useState } from 'react';\r\n+\r\n+const Home = () => {\r\n+    const role = localStorage.getItem('role');\r\n+\r\n+    const [currentPage, setCurrentPage] = useState(1);\r\n+    const perPage = 9;\r\n+\r\n+    const { loading, error, data } = useQuery(BOOKS, {\r\n+        variables: { page: currentPage, perPage },\r\n+    });\r\n+\r\n+    if (loading) return <p>Loading...</p>;\r\n+    if (error) return <p>Error: {error.message}</p>;\r\n+\r\n+    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n+\r\n+    const handlePreviousPage = () => {\r\n+        if (currentPage > 1) {\r\n+            setCurrentPage(previousPage);\r\n+        }\r\n+    };\r\n+\r\n+    const handleNextPage = () => {\r\n+        if (currentPage < lastPage) {\r\n+            setCurrentPage(nextPage);\r\n+        }\r\n+    };\r\n+\r\n+    return (\r\n+        <div className=\"home\">\r\n+        <Navbar />\r\n+        <Search />\r\n+        <div style={{backgroundColor:'', marginTop:'80px', marginBottom:'80px'}}>\r\n+                 <h3 style={{paddingTop:'20px',textAlign:'center', color:'#18500A'}}>We need your support!</h3>\r\n+            <Link  className='donate-msg'  to='/donate' style={{ color:'#18500A'}}> \r\n+        <p style={{ fontSize:'20px', textAlign:'center', paddingBottom:'40px'}}>Assalamu alaykum, click here to support us by donating funds that we need in order to be able to continue to deliver splendid content.<br/> jazakumullahu khairan <VolunteerActivismIcon fontSize=\"small\" style={{ fill:'#18500A', }} /> </p>\r\n+        </Link>  \r\n+           </div>\r\n+        <div className=\"content\">\r\n+            <aside className=\"categories-sidebar\">\r\n+                <Categories />\r\n+            </aside>\r\n+    \r\n+            <main className=\"catalog-section\">\r\n+                <div className=\"catalog-grid\">\r\n+                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n+                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n+                            <Books\r\n+                                bookCover={bookCover}\r\n+                                bookName={bookName}\r\n+                                bookAuthor={bookAuthor}\r\n+                            />\r\n+                        </Link>\r\n+                    ))}\r\n+                </div>\r\n+    \r\n+                <div className=\"pagination\">\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handlePreviousPage}\r\n+                        disabled={currentPage === 1}\r\n+                        aria-label=\"Previous page\"\r\n+                    >\r\n+                        ◄\r\n+                    </button>\r\n+                    <span className=\"page-number\">\r\n+                        Page {currentPage} of {lastPage}\r\n+                    </span>\r\n+                    <button\r\n+                        className=\"pag\"\r\n+                        onClick={handleNextPage}\r\n+                        disabled={currentPage === lastPage}\r\n+                        aria-label=\"Next page\"\r\n+                    >\r\n+                        ►\r\n+                    </button>\r\n+                </div>\r\n+            </main>\r\n+        </div>\r\n+    \r\n+        {role === 'admin' || role === 'superAdmin' ? (\r\n+            <button className=\"addBook\">\r\n+                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n+                    +\r\n+                </Link>\r\n+            </button>\r\n+        ) : null}\r\n+    \r\n+        <Footer />\r\n+    </div>\r\n+    \r\n+    );\r\n+};\r\n+\r\n+export default Home;\r\n"
                }
            ],
            "date": 1736560708542,
            "name": "Commit-0",
            "content": "import '../css/Home.css'; \r\nimport Search from '../layout/Search.jsx';\r\nimport Categories from '../layout/Categories.jsx'; \r\nimport Navbar from '../layout/Navbar.jsx';\r\nimport Footer from '../layout/Footer.jsx';\r\nimport { useQuery } from '@apollo/client';\r\nimport { BOOKS } from '../graphql/queries.js';\r\nimport Books from '../layout/Books.jsx';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst Home = () => {\r\n    const role = localStorage.getItem('role');\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const perPage = 9;\r\n\r\n    const { loading, error, data } = useQuery(BOOKS, {\r\n        variables: { page: currentPage, perPage },\r\n    });\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error.message}</p>;\r\n\r\n    const { allBooks, previousPage, nextPage, lastPage } = data.books;\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(previousPage);\r\n        }\r\n    };\r\n\r\n    const handleNextPage = () => {\r\n        if (currentPage < lastPage) {\r\n            setCurrentPage(nextPage);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home\">\r\n        <Navbar />\r\n        <Search />\r\n        <div className=\"content\">\r\n            <aside className=\"categories-sidebar\">\r\n                <Categories />\r\n            </aside>\r\n    \r\n           {} <main className=\"catalog-section\">\r\n                <div className=\"catalog-grid\">\r\n                    {allBooks.map(({ id, bookCover, bookName, bookAuthor }) => (\r\n                        <Link className=\"catalog-link\" to={`/home/${id}`} key={id}>\r\n                            <Books\r\n                                bookCover={bookCover}\r\n                                bookName={bookName}\r\n                                bookAuthor={bookAuthor}\r\n                            />\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n    \r\n                <div className=\"pagination\">\r\n                    <button\r\n                        className=\"pag\"\r\n                        onClick={handlePreviousPage}\r\n                        disabled={currentPage === 1}\r\n                        aria-label=\"Previous page\"\r\n                    >\r\n                        ◄\r\n                    </button>\r\n                    <span className=\"page-number\">\r\n                        Page {currentPage} of {lastPage}\r\n                    </span>\r\n                    <button\r\n                        className=\"pag\"\r\n                        onClick={handleNextPage}\r\n                        disabled={currentPage === lastPage}\r\n                        aria-label=\"Next page\"\r\n                    >\r\n                        ►\r\n                    </button>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    \r\n        {role === 'admin' || role === 'superAdmin' ? (\r\n            <button className=\"addBook\">\r\n                <Link to={'/admin/addBook'} style={{ textDecoration: 'none', color: '#ffffff' }}>\r\n                    +\r\n                </Link>\r\n            </button>\r\n        ) : null}\r\n    \r\n        <Footer />\r\n    </div>\r\n    \r\n    );\r\n};\r\n\r\nexport default Home;\r\n"
        }
    ]
}