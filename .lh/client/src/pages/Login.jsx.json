{
    "sourceFile": "client/src/pages/Login.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1736566566686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736566572084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+import '../css/Auth.css'\r\n+import { useState } from 'react';\r\n+import {useNavigate} from \"react-router-dom\";\r\n+import libraryWay from '/assets/libraryWay.jpg';\r\n+import { LOGIN } from \"../graphql/mutations.js\"\r\n+import { useMutation } from '@apollo/client';\r\n+\r\n+const Login = () => {\r\n+  const myHistory = useNavigate()\r\n+  const [username, setUsername] = useState('')\r\n+  const [password, setPassword] = useState('')\r\n+  const [ login, {loading, error }] = useMutation(LOGIN);\r\n+ \r\n+  \r\n+\r\n+const handleLogin = async (e) => {\r\n+       e.preventDefault();\r\n+ try {\r\n+      const { data } = await login({ variables: { loginuser: { username, password } } });\r\n+       \r\n+      localStorage.setItem('authToken', data.login.token);\r\n+      localStorage.setItem('userId', data.login.userId);\r\n+      localStorage.setItem('role', data.login.role)\r\n+      const expiryDate = new Date(new Date().getTime() + 5 * 60 * 60 * 1000); // 5 hours from now\r\n+      localStorage.setItem('expiryDate', expiryDate.toString());\r\n+    myHistory('/home')\r\n+    } catch (error) {\r\n+      console.error('Login error:', error.message);\r\n+    }\r\n+ }\r\n+\r\n+    return(\r\n+<div className=\"login\"> \r\n+<img className=\"LibraryWay\"  src={libraryWay} width={480} height={620} loading='lazy' alt={\"library way 1\"}/>\r\n+\r\n+    <div className=\"form\" >\r\n+<h1 className='title'>Login</h1>\r\n+{error && <p className='errorMsg'>Incorrect username or password</p>} \r\n+{/* {login && <p className='successMsg'>Login successful</p>} */}\r\n+<form action=\"/login\" method=\"post\"\r\n+onSubmit={handleLogin}>\r\n+\r\n+<div style={{'marginBottom':'35px', paddingTop:'30px'}}>\r\n+<label htmlFor=\"username\" style={{'color':'#070C70', 'fontSize':'25px'}}>Username</label><br/>\r\n+<input type=\"username\" className='info' id=\"username\"\r\n+value={username}   onChange={(e) => setUsername(e.target.value)}\r\n+  required/> <br/>\r\n+</div>\r\n+\r\n+<div style={{'marginTop':'35px', 'marginBottom':'35px'}}>\r\n+<label htmlFor=\"password\" style={{'color':'#070C70', 'fontSize':'25px'}}>Password</label><br/>\r\n+<input type=\"password\" className='info' id=\"password\"\r\n+value={password}     onChange={(e) => setPassword(e.target.value)}\r\n+  required/> <br/>\r\n+</div>\r\n+{!loading ? <button>Login Account</button> : <button disabled>Loading...</button>} \r\n+<button style={{'backgroundColor':'#070C70','marginTop':'15px', 'color':'#ff1493', borderColor:'#ff1493'}}>Forget password</button>\r\n+</form>\r\n+\r\n+         <div className='acc' >\r\n+<p style={{'color':'#070C70'}}>Dont have an account?</p>  \r\n+<a   onClick={() => window.scrollTo(0, 0)} href=\"/signup\" className='form-link'>Signup</a>\r\n+</div>\r\n+    </div>\r\n+\r\n+</div>\r\n+    )}\r\n+export default Login ;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740308260357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,136 +1,113 @@\n-import '../css/Auth.css'\r\n+import '../css/Auth.css';\r\n import { useState } from 'react';\r\n-import {useNavigate} from \"react-router-dom\";\r\n+import { useNavigate, Link } from 'react-router-dom';\r\n import libraryWay from '/assets/libraryWay.jpg';\r\n-import { LOGIN } from \"../graphql/mutations.js\"\r\n+import { LOGIN } from '../graphql/mutations.js';\r\n import { useMutation } from '@apollo/client';\r\n \r\n const Login = () => {\r\n-  const myHistory = useNavigate()\r\n-  const [username, setUsername] = useState('')\r\n-  const [password, setPassword] = useState('')\r\n-  const [ login, {loading, error }] = useMutation(LOGIN);\r\n- \r\n-  \r\n+  const navigate = useNavigate();\r\n+  const [username, setUsername] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [login, { loading, error }] = useMutation(LOGIN);\r\n \r\n-const handleLogin = async (e) => {\r\n-       e.preventDefault();\r\n- try {\r\n-      const { data } = await login({ variables: { loginuser: { username, password } } });\r\n-       \r\n-      localStorage.setItem('authToken', data.login.token);\r\n-      localStorage.setItem('userId', data.login.userId);\r\n-      localStorage.setItem('role', data.login.role)\r\n-      const expiryDate = new Date(new Date().getTime() + 5 * 60 * 60 * 1000); // 5 hours from now\r\n-      localStorage.setItem('expiryDate', expiryDate.toString());\r\n-    myHistory('/home')\r\n-    } catch (error) {\r\n-      console.error('Login error:', error.message);\r\n-    }\r\n- }\r\n+  const handleLogin = async (e) => {\r\n+    e.preventDefault();\r\n \r\n-    return(\r\n-<div className=\"login\"> \r\n-<img className=\"LibraryWay\"  src={libraryWay} width={480} height={620} loading='lazy' alt={\"library way 1\"}/>\r\n+    try {\r\n+      const { data } = await login({\r\n+        variables: { loginuser: { username, password } },\r\n+      });\r\n \r\n-    <div className=\"form\" >\r\n-<h1 className='title'>Login</h1>\r\n-{error && <p className='errorMsg'>Incorrect username or password</p>} \r\n-{/* {login && <p className='successMsg'>Login successful</p>} */}\r\n-<form action=\"/login\" method=\"post\"\r\n-onSubmit={handleLogin}>\r\n-\r\n-<div style={{'marginBottom':'35px', paddingTop:'30px'}}>\r\n-<label htmlFor=\"username\" style={{'color':'#070C70', 'fontSize':'25px'}}>Username</label><br/>\r\n-<input type=\"username\" className='info' id=\"username\"\r\n-value={username}   onChange={(e) => setUsername(e.target.value)}\r\n-  required/> <br/>\r\n-</div>\r\n-\r\n-<div style={{'marginTop':'35px', 'marginBottom':'35px'}}>\r\n-<label htmlFor=\"password\" style={{'color':'#070C70', 'fontSize':'25px'}}>Password</label><br/>\r\n-<input type=\"password\" className='info' id=\"password\"\r\n-value={password}     onChange={(e) => setPassword(e.target.value)}\r\n-  required/> <br/>\r\n-</div>\r\n-{!loading ? <button>Login Account</button> : <button disabled>Loading...</button>} \r\n-<button style={{'backgroundColor':'#070C70','marginTop':'15px', 'color':'#ff1493', borderColor:'#ff1493'}}>Forget password</button>\r\n-</form>\r\n-\r\n-         <div className='acc' >\r\n-<p style={{'color':'#070C70'}}>Dont have an account?</p>  \r\n-<a   onClick={() => window.scrollTo(0, 0)} href=\"/signup\" className='form-link'>Signup</a>\r\n-</div>\r\n-    </div>\r\n-\r\n-</div>\r\n-    )}\r\n-export default Login ;\n-import '../css/Auth.css'\r\n-import { useState } from 'react';\r\n-import {useNavigate} from \"react-router-dom\";\r\n-import libraryWay from '/assets/libraryWay.jpg';\r\n-import { LOGIN } from \"../graphql/mutations.js\"\r\n-import { useMutation } from '@apollo/client';\r\n-\r\n-const Login = () => {\r\n-  const myHistory = useNavigate()\r\n-  const [username, setUsername] = useState('')\r\n-  const [password, setPassword] = useState('')\r\n-  const [ login, {loading, error }] = useMutation(LOGIN);\r\n- \r\n-  \r\n-\r\n-const handleLogin = async (e) => {\r\n-       e.preventDefault();\r\n- try {\r\n-      const { data } = await login({ variables: { loginuser: { username, password } } });\r\n-       \r\n+      // Store token and user info in localStorage\r\n       localStorage.setItem('authToken', data.login.token);\r\n       localStorage.setItem('userId', data.login.userId);\r\n-      localStorage.setItem('role', data.login.role)\r\n-      const expiryDate = new Date(new Date().getTime() + 5 * 60 * 60 * 1000); // 5 hours from now\r\n+      localStorage.setItem('role', data.login.role);\r\n+\r\n+      // Set expiry for token (5 hours from now)\r\n+      const expiryDate = new Date(Date.now() + 5 * 60 * 60 * 1000);\r\n       localStorage.setItem('expiryDate', expiryDate.toString());\r\n-    myHistory('/home')\r\n-    } catch (error) {\r\n-      console.error('Login error:', error.message);\r\n+\r\n+      // Navigate to the home page\r\n+      navigate('/home');\r\n+    } catch (err) {\r\n+      console.error('Login error:', err.message);\r\n     }\r\n- }\r\n+  };\r\n \r\n-    return(\r\n-<div className=\"login\"> \r\n-<img className=\"LibraryWay\"  src={libraryWay} width={480} height={620} loading='lazy' alt={\"library way 1\"}/>\r\n-\r\n-    <div className=\"form\" >\r\n-<h1 className='title'>Login</h1>\r\n-{error && <p className='errorMsg'>Incorrect username or password</p>} \r\n-{/* {login && <p className='successMsg'>Login successful</p>} */}\r\n-<form action=\"/login\" method=\"post\"\r\n-onSubmit={handleLogin}>\r\n-\r\n-<div style={{'marginBottom':'35px', paddingTop:'30px'}}>\r\n-<label htmlFor=\"username\" style={{'color':'#070C70', 'fontSize':'25px'}}>Username</label><br/>\r\n\\ No newline at end of file\n-<input type=\"username\" className='info' id=\"username\"\r\n-value={username}   onChange={(e) => setUsername(e.target.value)}\r\n-  required/> <br/>\r\n-</div>\r\n-\r\n-<div style={{'marginTop':'35px', 'marginBottom':'35px'}}>\r\n-<label htmlFor=\"password\" style={{'color':'#070C70', 'fontSize':'25px'}}>Password</label><br/>\r\n-<input type=\"password\" className='info' id=\"password\"\r\n-value={password}     onChange={(e) => setPassword(e.target.value)}\r\n-  required/> <br/>\r\n-</div>\r\n-{!loading ? <button>Login Account</button> : <button disabled>Loading...</button>} \r\n-<button style={{'backgroundColor':'#070C70','marginTop':'15px', 'color':'#ff1493', borderColor:'#ff1493'}}>Forget password</button>\r\n-</form>\r\n-\r\n-         <div className='acc' >\r\n-<p style={{'color':'#070C70'}}>Dont have an account?</p>  \r\n-<a href=\"/signup\"  className='form-link'>Signup</a>\r\n-</div>\r\n+  return (\r\n+    <div className=\"login\">\r\n+      <img\r\n+        className=\"LibraryWay\"\r\n+        src={libraryWay}\r\n+        width={480}\r\n+        height={620}\r\n+        loading=\"lazy\"\r\n+        alt=\"Library Way\"\r\n+      />\r\n+      <div className=\"form\">\r\n+        <h1 className=\"title\">Login</h1>\r\n+        {error && <p className=\"errorMsg\">Incorrect username or password</p>}\r\n+        <form onSubmit={handleLogin}>\r\n+          <div style={{ marginBottom: '35px', paddingTop: '30px' }}>\r\n+            <label htmlFor=\"username\" style={{ color: '#070C70', fontSize: '25px' }}>\r\n+              Username\r\n+            </label>\r\n+            <br />\r\n+            <input\r\n+              type=\"text\"\r\n+              className=\"info\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div style={{ margin: '35px 0' }}>\r\n+            <label htmlFor=\"password\" style={{ color: '#070C70', fontSize: '25px' }}>\r\n+              Password\r\n+            </label>\r\n+            <br />\r\n+            <input\r\n+              type=\"password\"\r\n+              className=\"info\"\r\n+              id=\"password\"\r\n+              value={password}\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            {!loading ? (\r\n+              <button type=\"submit\">Login Account</button>\r\n+            ) : (\r\n+              <button type=\"submit\" disabled>\r\n+                Loading...\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+          <button\r\n+            type=\"button\"\r\n+            style={{\r\n+              backgroundColor: '#070C70',\r\n+              marginTop: '15px',\r\n+              color: '#ff1493',\r\n+              borderColor: '#ff1493',\r\n+            }}\r\n+          >\r\n+            Forget password\r\n+          </button>\r\n+        </form>\r\n+        <div className=\"acc\">\r\n+          <p style={{ color: '#070C70' }}>Don't have an account?</p>\r\n+          {/* Optionally use Link from react-router-dom to avoid full page reload */}\r\n+          <Link to=\"/signup\" className=\"form-link\" onClick={() => window.scrollTo(0, 0)}>\r\n+            Signup\r\n+          </Link>\r\n+        </div>\r\n+      </div>\r\n     </div>\r\n+  );\r\n+};\r\n \r\n-</div>\r\n-    )}\r\n-export default Login ;\n+export default Login;\r\n"
                },
                {
                    "date": 1740308497274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,113 +0,0 @@\n-import '../css/Auth.css';\r\n-import { useState } from 'react';\r\n-import { useNavigate, Link } from 'react-router-dom';\r\n-import libraryWay from '/assets/libraryWay.jpg';\r\n-import { LOGIN } from '../graphql/mutations.js';\r\n-import { useMutation } from '@apollo/client';\r\n-\r\n-const Login = () => {\r\n-  const navigate = useNavigate();\r\n-  const [username, setUsername] = useState('');\r\n-  const [password, setPassword] = useState('');\r\n-  const [login, { loading, error }] = useMutation(LOGIN);\r\n-\r\n-  const handleLogin = async (e) => {\r\n-    e.preventDefault();\r\n-\r\n-    try {\r\n-      const { data } = await login({\r\n-        variables: { loginuser: { username, password } },\r\n-      });\r\n-\r\n-      // Store token and user info in localStorage\r\n-      localStorage.setItem('authToken', data.login.token);\r\n-      localStorage.setItem('userId', data.login.userId);\r\n-      localStorage.setItem('role', data.login.role);\r\n-\r\n-      // Set expiry for token (5 hours from now)\r\n-      const expiryDate = new Date(Date.now() + 5 * 60 * 60 * 1000);\r\n-      localStorage.setItem('expiryDate', expiryDate.toString());\r\n-\r\n-      // Navigate to the home page\r\n-      navigate('/home');\r\n-    } catch (err) {\r\n-      console.error('Login error:', err.message);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"login\">\r\n-      <img\r\n-        className=\"LibraryWay\"\r\n-        src={libraryWay}\r\n-        width={480}\r\n-        height={620}\r\n-        loading=\"lazy\"\r\n-        alt=\"Library Way\"\r\n-      />\r\n-      <div className=\"form\">\r\n-        <h1 className=\"title\">Login</h1>\r\n-        {error && <p className=\"errorMsg\">Incorrect username or password</p>}\r\n-        <form onSubmit={handleLogin}>\r\n-          <div style={{ marginBottom: '35px', paddingTop: '30px' }}>\r\n-            <label htmlFor=\"username\" style={{ color: '#070C70', fontSize: '25px' }}>\r\n-              Username\r\n-            </label>\r\n-            <br />\r\n-            <input\r\n-              type=\"text\"\r\n-              className=\"info\"\r\n-              id=\"username\"\r\n-              value={username}\r\n-              onChange={(e) => setUsername(e.target.value)}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div style={{ margin: '35px 0' }}>\r\n-            <label htmlFor=\"password\" style={{ color: '#070C70', fontSize: '25px' }}>\r\n-              Password\r\n-            </label>\r\n-            <br />\r\n-            <input\r\n-              type=\"password\"\r\n-              className=\"info\"\r\n-              id=\"password\"\r\n-              value={password}\r\n-              onChange={(e) => setPassword(e.target.value)}\r\n-              required\r\n-            />\r\n-          </div>\r\n-          <div>\r\n-            {!loading ? (\r\n-              <button type=\"submit\">Login Account</button>\r\n-            ) : (\r\n-              <button type=\"submit\" disabled>\r\n-                Loading...\r\n-              </button>\r\n-            )}\r\n-          </div>\r\n-          <button\r\n-            type=\"button\"\r\n-            style={{\r\n-              backgroundColor: '#070C70',\r\n-              marginTop: '15px',\r\n-              color: '#ff1493',\r\n-              borderColor: '#ff1493',\r\n-            }}\r\n-          >\r\n-            Forget password\r\n-          </button>\r\n-        </form>\r\n-        <div className=\"acc\">\r\n-          <p style={{ color: '#070C70' }}>Don't have an account?</p>\r\n-          {/* Optionally use Link from react-router-dom to avoid full page reload */}\r\n-          <Link to=\"/signup\" className=\"form-link\" onClick={() => window.scrollTo(0, 0)}>\r\n-            Signup\r\n-          </Link>\r\n-        </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Login;\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740308588075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,110 @@\n-\n+import '../css/Auth.css';\r\n+import { useState } from 'react';\r\n+import { useNavigate, Link } from 'react-router-dom';\r\n+import libraryWay from '/assets/libraryWay.jpg';\r\n+import { LOGIN } from '../graphql/mutations.js';\r\n+import { useMutation } from '@apollo/client';\r\n+\r\n+const Login = () => {\r\n+  const navigate = useNavigate();\r\n+  const [username, setUsername] = useState('');\r\n+  const [password, setPassword] = useState('');\r\n+  const [login, { loading, error }] = useMutation(LOGIN);\r\n+\r\n+  const handleLogin = async (e) => {\r\n+    e.preventDefault();\r\n+    try {\r\n+      const { data } = await login({\r\n+        variables: { loginuser: { username, password } },\r\n+      });\r\n+\r\n+      // Save token and user info in localStorage\r\n+      localStorage.setItem('authToken', data.login.token);\r\n+      localStorage.setItem('userId', data.login.userId);\r\n+      localStorage.setItem('role', data.login.role);\r\n+\r\n+      // Set expiry for token (5 hours from now)\r\n+      const expiryDate = new Date(Date.now() + 5 * 60 * 60 * 1000);\r\n+      localStorage.setItem('expiryDate', expiryDate.toString());\r\n+\r\n+      navigate('/home');\r\n+    } catch (err) {\r\n+      console.error('Login error:', err.message);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"login\">\r\n+      <img\r\n+        className=\"LibraryWay\"\r\n+        src={libraryWay}\r\n+        width={480}\r\n+        height={620}\r\n+        loading=\"lazy\"\r\n+        alt=\"Library Way\"\r\n+      />\r\n+      <div className=\"form\">\r\n+        <h1 className=\"title\">Login</h1>\r\n+        {error && <p className=\"errorMsg\">Incorrect username or password</p>}\r\n+        <form onSubmit={handleLogin}>\r\n+          <div style={{ marginBottom: '35px', paddingTop: '30px' }}>\r\n+            <label htmlFor=\"username\" style={{ color: '#070C70', fontSize: '25px' }}>\r\n+              Username\r\n+            </label>\r\n+            <br />\r\n+            <input\r\n+              type=\"text\"\r\n+              className=\"info\"\r\n+              id=\"username\"\r\n+              value={username}\r\n+              onChange={(e) => setUsername(e.target.value)}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div style={{ margin: '35px 0' }}>\r\n+            <label htmlFor=\"password\" style={{ color: '#070C70', fontSize: '25px' }}>\r\n+              Password\r\n+            </label>\r\n+            <br />\r\n+            <input\r\n+              type=\"password\"\r\n+              className=\"info\"\r\n+              id=\"password\"\r\n+              value={password}\r\n+              onChange={(e) => setPassword(e.target.value)}\r\n+              required\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            {!loading ? (\r\n+              <button type=\"submit\">Login Account</button>\r\n+            ) : (\r\n+              <button type=\"submit\" disabled>\r\n+                Loading...\r\n+              </button>\r\n+            )}\r\n+          </div>\r\n+          <button\r\n+            type=\"button\"\r\n+            style={{\r\n+              backgroundColor: '#070C70',\r\n+              marginTop: '15px',\r\n+              color: '#ff1493',\r\n+              borderColor: '#ff1493',\r\n+            }}\r\n+          >\r\n+            Forget password\r\n+          </button>\r\n+        </form>\r\n+        <div className=\"acc\">\r\n+          <p style={{ color: '#070C70' }}>Don't have an account?</p>\r\n+          <Link to=\"/signup\" className=\"form-link\" onClick={() => window.scrollTo(0, 0)}>\r\n+            Signup\r\n+          </Link>\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Login;\r\n"
                },
                {
                    "date": 1740308597235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n             Forget password\r\n           </button>\r\n         </form>\r\n         <div className=\"acc\">\r\n-          <p style={{ color: '#070C70' }}>Don't have an account?</p>\r\n+          <p style={{ color: '#070C70' }}>Dont have an account?</p>\r\n           <Link to=\"/signup\" className=\"form-link\" onClick={() => window.scrollTo(0, 0)}>\r\n             Signup\r\n           </Link>\r\n         </div>\r\n"
                },
                {
                    "date": 1740313326737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         variables: { loginuser: { username, password } },\r\n       });\r\n \r\n       // Save token and user info in localStorage\r\n-      localStorage.setItem('authToken', data.login.token);\r\n+      localStorage.setItem('toke', data.login.token);\r\n       localStorage.setItem('userId', data.login.userId);\r\n       localStorage.setItem('role', data.login.role);\r\n \r\n       // Set expiry for token (5 hours from now)\r\n"
                }
            ],
            "date": 1736566566686,
            "name": "Commit-0",
            "content": "import '../css/Auth.css'\r\nimport { useState } from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport libraryWay from '/assets/libraryWay.jpg';\r\nimport { LOGIN } from \"../graphql/mutations.js\"\r\nimport { useMutation } from '@apollo/client';\r\n\r\nconst Login = () => {\r\n  const myHistory = useNavigate()\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [ login, {loading, error }] = useMutation(LOGIN);\r\n \r\n  \r\n\r\nconst handleLogin = async (e) => {\r\n       e.preventDefault();\r\n try {\r\n      const { data } = await login({ variables: { loginuser: { username, password } } });\r\n       \r\n      localStorage.setItem('authToken', data.login.token);\r\n      localStorage.setItem('userId', data.login.userId);\r\n      localStorage.setItem('role', data.login.role)\r\n      const expiryDate = new Date(new Date().getTime() + 5 * 60 * 60 * 1000); // 5 hours from now\r\n      localStorage.setItem('expiryDate', expiryDate.toString());\r\n    myHistory('/home')\r\n    } catch (error) {\r\n      console.error('Login error:', error.message);\r\n    }\r\n }\r\n\r\n    return(\r\n<div className=\"login\"> \r\n<img className=\"LibraryWay\"  src={libraryWay} width={480} height={620} loading='lazy' alt={\"library way 1\"}/>\r\n\r\n    <div className=\"form\" >\r\n<h1 className='title'>Login</h1>\r\n{error && <p className='errorMsg'>Incorrect username or password</p>} \r\n{/* {login && <p className='successMsg'>Login successful</p>} */}\r\n<form action=\"/login\" method=\"post\"\r\nonSubmit={handleLogin}>\r\n\r\n<div style={{'marginBottom':'35px', paddingTop:'30px'}}>\r\n<label htmlFor=\"username\" style={{'color':'#070C70', 'fontSize':'25px'}}>Username</label><br/>\r\n<input type=\"username\" className='info' id=\"username\"\r\nvalue={username}   onChange={(e) => setUsername(e.target.value)}\r\n  required/> <br/>\r\n</div>\r\n\r\n<div style={{'marginTop':'35px', 'marginBottom':'35px'}}>\r\n<label htmlFor=\"password\" style={{'color':'#070C70', 'fontSize':'25px'}}>Password</label><br/>\r\n<input type=\"password\" className='info' id=\"password\"\r\nvalue={password}     onChange={(e) => setPassword(e.target.value)}\r\n  required/> <br/>\r\n</div>\r\n{!loading ? <button>Login Account</button> : <button disabled>Loading...</button>} \r\n<button style={{'backgroundColor':'#070C70','marginTop':'15px', 'color':'#ff1493', borderColor:'#ff1493'}}>Forget password</button>\r\n</form>\r\n\r\n         <div className='acc' >\r\n<p style={{'color':'#070C70'}}>Dont have an account?</p>  \r\n<a href=\"/signup\"  className='form-link'>Signup</a>\r\n</div>\r\n    </div>\r\n\r\n</div>\r\n    )}\r\nexport default Login ;"
        }
    ]
}