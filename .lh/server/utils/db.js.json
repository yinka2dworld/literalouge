{
    "sourceFile": "server/utils/db.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1736008297237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736008318503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n+  dialect: 'mysql',\r\n+  host: process.env.DB_HOST,\r\n+  port: process.env.DB_PORT,\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736008341981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n+  dialect: 'mysql',\r\n+  host: process.env.DB_HOST,\r\n+  port: process.env.DB_PORT\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736008350533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n+  dialect: 'mysql',\r\n+  host: process.env.DB_HOST,\r\n+  port: process.env.DB_PORT || 5432,\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736008360749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,36 +5,10 @@\n \r\n const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n   dialect: 'mysql',\r\n   host: process.env.DB_HOST,\r\n-  port: process.env.DB_PORT || 5432,\r\n-\r\n-const initializeDatabase = async () => {\r\n-  try {\r\n-    await sequelize.authenticate();\r\n-    console.log('Database connection established successfully.');\r\n-\r\n-    // Sync all models\r\n-    await sequelize.sync({ alter: true });\r\n-    console.log('All models were synchronized successfully.');\r\n-  } catch (error) {\r\n-    console.error('Error connecting to the database or synchronizing models:', error);\r\n-  }\r\n-};\r\n-\r\n-\r\n-initializeDatabase();\r\n-\r\n-export default sequelize;\r\n-import { Sequelize } from 'sequelize';\r\n-import dotenv from 'dotenv';\r\n-\r\n-dotenv.config();\r\n-\r\n-const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n-  dialect: 'mysql',\r\n-  host: process.env.DB_HOST,\r\n   port: process.env.DB_PORT\r\n+});\r\n \r\n const initializeDatabase = async () => {\r\n   try {\r\n     await sequelize.authenticate();\r\n@@ -51,58 +25,4 @@\n \r\n initializeDatabase();\r\n \r\n export default sequelize;\r\n-import { Sequelize } from 'sequelize';\r\n-import dotenv from 'dotenv';\r\n-\r\n-dotenv.config();\r\n-\r\n-const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n-  dialect: 'mysql',\r\n-  host: process.env.DB_HOST,\r\n-  port: process.env.DB_PORT,\r\n-\r\n-const initializeDatabase = async () => {\r\n-  try {\r\n-    await sequelize.authenticate();\r\n-    console.log('Database connection established successfully.');\r\n-\r\n-    // Sync all models\r\n-    await sequelize.sync({ alter: true });\r\n-    console.log('All models were synchronized successfully.');\r\n-  } catch (error) {\r\n-    console.error('Error connecting to the database or synchronizing models:', error);\r\n-  }\r\n-};\r\n-\r\n-\r\n-initializeDatabase();\r\n-\r\n-export default sequelize;\r\n-import { Sequelize } from 'sequelize';\r\n-import dotenv from 'dotenv';\r\n-\r\n-dotenv.config();\r\n-\r\n-const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n-  dialect: 'mysql',\r\n-  host: process.env.DB_HOST,\r\n-  port:  process.env.DB_PORT || 5432,\r\n-\r\n-const initializeDatabase = async () => {\r\n-  try {\r\n-    await sequelize.authenticate();\r\n-    console.log('Database connection established successfully.');\r\n-\r\n-    // Sync all models\r\n-    await sequelize.sync({ alter: true });\r\n-    console.log('All models were synchronized successfully.');\r\n-  } catch (error) {\r\n-    console.error('Error connecting to the database or synchronizing models:', error);\r\n-  }\r\n-};\r\n-\r\n-\r\n-initializeDatabase();\r\n-\r\n-export default sequelize;\r\n"
                },
                {
                    "date": 1736008395518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n dotenv.config();\r\n \r\n const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n-  dialect: 'mysql',\r\n+  dialect: 'postgres',\r\n   host: process.env.DB_HOST,\r\n   port: process.env.DB_PORT\r\n });\r\n \r\n"
                },
                {
                    "date": 1736008747252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,11 @@\n \r\n dotenv.config();\r\n \r\n const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n-  dialect: 'postgres',\r\n+  dialect: 'mysql',\r\n   host: process.env.DB_HOST,\r\n-  port: process.env.DB_PORT\r\n+  port: 3306,\r\n });\r\n \r\n const initializeDatabase = async () => {\r\n   try {\r\n"
                },
                {
                    "date": 1736009403464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \r\n const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n   dialect: 'mysql',\r\n   host: process.env.DB_HOST,\r\n-  port: 3306,\r\n+  port: ,\r\n });\r\n \r\n const initializeDatabase = async () => {\r\n   try {\r\n"
                },
                {
                    "date": 1736009414114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n+  dialect: 'mysql',\r\n+  host: process.env.DB_HOST,\r\n+  port: DB_PORT,\r\n+});\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736009420106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n+  dialect: 'mysql',\r\n+  host: process.env.DB_HOST,\r\n+  port: process.env.DB_PORT,\r\n+});\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736009664524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n+  dialect: 'mysql',\r\n+  host: process.env.DB_HOST,\r\n+  port: 3306,\r\n+});\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736010296482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,38 +3,10 @@\n \r\n dotenv.config();\r\n \r\n const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n-  dialect: 'mysql',\r\n+  dialect: 'podtgres',\r\n   host: process.env.DB_HOST,\r\n-  port: 3306,\r\n-});\r\n-\r\n-const initializeDatabase = async () => {\r\n-  try {\r\n-    await sequelize.authenticate();\r\n-    console.log('Database connection established successfully.');\r\n-\r\n-    // Sync all models\r\n-    await sequelize.sync({ alter: true });\r\n-    console.log('All models were synchronized successfully.');\r\n-  } catch (error) {\r\n-    console.error('Error connecting to the database or synchronizing models:', error);\r\n-  }\r\n-};\r\n-\r\n-\r\n-initializeDatabase();\r\n-\r\n-export default sequelize;\r\n-import { Sequelize } from 'sequelize';\r\n-import dotenv from 'dotenv';\r\n-\r\n-dotenv.config();\r\n-\r\n-const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n-  dialect: 'mysql',\r\n-  host: process.env.DB_HOST,\r\n   port: process.env.DB_PORT,\r\n });\r\n \r\n const initializeDatabase = async () => {\r\n@@ -53,60 +25,4 @@\n \r\n initializeDatabase();\r\n \r\n export default sequelize;\r\n-import { Sequelize } from 'sequelize';\r\n-import dotenv from 'dotenv';\r\n-\r\n-dotenv.config();\r\n-\r\n-const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n-  dialect: 'mysql',\r\n-  host: process.env.DB_HOST,\r\n-  port: DB_PORT,\r\n-});\r\n-\r\n-const initializeDatabase = async () => {\r\n-  try {\r\n-    await sequelize.authenticate();\r\n-    console.log('Database connection established successfully.');\r\n-\r\n-    // Sync all models\r\n-    await sequelize.sync({ alter: true });\r\n-    console.log('All models were synchronized successfully.');\r\n-  } catch (error) {\r\n-    console.error('Error connecting to the database or synchronizing models:', error);\r\n-  }\r\n-};\r\n-\r\n-\r\n-initializeDatabase();\r\n-\r\n-export default sequelize;\r\n-import { Sequelize } from 'sequelize';\r\n-import dotenv from 'dotenv';\r\n-\r\n-dotenv.config();\r\n-\r\n-const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n-  dialect: 'mysql',\r\n-  host: process.env.DB_HOST,\r\n-  port: ,\r\n-});\r\n-\r\n-const initializeDatabase = async () => {\r\n-  try {\r\n-    await sequelize.authenticate();\r\n-    console.log('Database connection established successfully.');\r\n-\r\n-    // Sync all models\r\n-    await sequelize.sync({ alter: true });\r\n-    console.log('All models were synchronized successfully.');\r\n-  } catch (error) {\r\n-    console.error('Error connecting to the database or synchronizing models:', error);\r\n-  }\r\n-};\r\n-\r\n-\r\n-initializeDatabase();\r\n-\r\n-export default sequelize;\r\n"
                },
                {
                    "date": 1736010684876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n+  dialect: 'posrtgres',\r\n+  host: process.env.DB_HOST,\r\n+  port: process.env.DB_PORT,\r\n+});\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736011692660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize(process.env.DB_PASSWORD, {\r\n+  dialect: 'posrtgres',\r\n+  host: process.env.DB_HOST,\r\n+  port: process.env.DB_PORT,\r\n+});\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736011698195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize(process.env.DB_URL, {\r\n+  dialect: 'posrtgres',\r\n+  host: process.env.DB_HOST,\r\n+  port: process.env.DB_PORT,\r\n+});\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736011725261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize(process.env.DB_URL, {\r\n+  dialect: 'posrtgres'\r\n+});\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736012250370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize(process.env.DB_URL, {\r\n+  dialect: 'posrtgres',\r\n+  protocol: 'postgres',\r\n+  logging: false,\r\n+  dialectOptions: {\r\n+    ssl: {\r\n+      require: true,\r\n+      rejectUnauthorized: false, // For self-signed certificates\r\n+    },\r\n+  },\r\n+});\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                },
                {
                    "date": 1736012258110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { Sequelize } from 'sequelize';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const sequelize = new Sequelize(process.env.DB_URL, {\r\n+  dialect: 'posrtgres',\r\n+  protocol: 'postgres',\r\n+  logging: false,\r\n+  dialectOptions: {\r\n+    ssl: {\r\n+      require: true,\r\n+      rejectUnauthorized: false, \r\n+    },\r\n+  },\r\n+});\r\n+\r\n+const initializeDatabase = async () => {\r\n+  try {\r\n+    await sequelize.authenticate();\r\n+    console.log('Database connection established successfully.');\r\n+\r\n+    // Sync all models\r\n+    await sequelize.sync({ alter: true });\r\n+    console.log('All models were synchronized successfully.');\r\n+  } catch (error) {\r\n+    console.error('Error connecting to the database or synchronizing models:', error);\r\n+  }\r\n+};\r\n+\r\n+\r\n+initializeDatabase();\r\n+\r\n+export default sequelize;\r\n"
                }
            ],
            "date": 1736008297237,
            "name": "Commit-0",
            "content": "import { Sequelize } from 'sequelize';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst sequelize = new Sequelize('literalouge', process.env.DB_USERNAME, process.env.DB_PASSWORD, {\r\n  dialect: 'mysql',\r\n  host: process.env.DB_HOST,\r\n  port:  process.env.DB_PORT || 5432,\r\n\r\nconst initializeDatabase = async () => {\r\n  try {\r\n    await sequelize.authenticate();\r\n    console.log('Database connection established successfully.');\r\n\r\n    // Sync all models\r\n    await sequelize.sync({ alter: true });\r\n    console.log('All models were synchronized successfully.');\r\n  } catch (error) {\r\n    console.error('Error connecting to the database or synchronizing models:', error);\r\n  }\r\n};\r\n\r\n\r\ninitializeDatabase();\r\n\r\nexport default sequelize;\r\n"
        }
    ]
}