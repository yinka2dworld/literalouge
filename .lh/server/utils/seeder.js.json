{
    "sourceFile": "server/utils/seeder.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1740126365012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740259392122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import bcrypt from \"bcrypt\";\r\n \r\n export const seedAdmin = async () =>{\r\n try {\r\n-  const adminChecker = await User.findOne({email : 'fawazmusty247@gmail.com'});\r\n+  const adminChecker = await User.findOne({ email: 'test@example.com' } });\r\n     if (adminChecker) {\r\n       console.log('Admin user already exists, skipping seed');\r\n       return;\r\n     }\r\n"
                },
                {
                    "date": 1740259400441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import bcrypt from \"bcrypt\";\r\n \r\n export const seedAdmin = async () =>{\r\n try {\r\n-  const adminChecker = await User.findOne({ email: 'test@example.com' } });\r\n+  const adminChecker = await User.findOne();\r\n     if (adminChecker) {\r\n       console.log('Admin user already exists, skipping seed');\r\n       return;\r\n     }\r\n"
                },
                {
                    "date": 1740259428608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import bcrypt from \"bcrypt\";\r\n \r\n export const seedAdmin = async () =>{\r\n try {\r\n-  const adminChecker = await User.findOne();\r\n+  const adminChecker = await User.findOne({ where: { email: 'test@example.com' } });\r\n     if (adminChecker) {\r\n       console.log('Admin user already exists, skipping seed');\r\n       return;\r\n     }\r\n"
                },
                {
                    "date": 1740282683441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,16 +10,9 @@\n     }\r\n const hashedPassword = await bcrypt.hash(\"abc123\", bcrypt.genSaltSync()); \r\n const adminUser = {\r\n   \"username\": \"adeyinka\",\r\n-  \"phoneNumber\": \"07085812226\",\r\n-  \"email\": \"fawazmusty247@gmail.com\",\r\n-  \"password\": hashedPassword,\r\n-  \"role\": \"superAdmin\"\r\n-};\r\n-\r\n-await appUser.create(adminUser)\r\n- await mongoose.disconnect();\r\n+  \"phoneNumber\": \"07085\r\n  console.log('Admin user seeded successfully')\r\n  } catch (error) {\r\n   console.error('Error seeding admin user')\r\n } \r\n"
                },
                {
                    "date": 1741682444996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,12 +7,19 @@\n     if (adminChecker) {\r\n       console.log('Admin user already exists, skipping seed');\r\n       return;\r\n     }\r\n-const hashedPassword = await bcrypt.hash(\"abc123\", bcrypt.genSaltSync()); \r\n+const hashedPassword = await bcrypt.hash(\"  const pdfName = `${book?.bookName}(literalouge.com).pdf`;\", bcrypt.genSaltSync()); \r\n const adminUser = {\r\n   \"username\": \"adeyinka\",\r\n-  \"phoneNumber\": \"07085\r\n+  \"phoneNumber\": \"07085812226\",\r\n+  \"email\": \"fawazmusty247@gmail.com\",\r\n+  \"password\": hashedPassword,\r\n+  \"role\": \"superAdmin\"\r\n+};\r\n+\r\n+await appUser.create(adminUser)\r\n+ await mongoose.disconnect();\r\n  console.log('Admin user seeded successfully')\r\n  } catch (error) {\r\n   console.error('Error seeding admin user')\r\n } \r\n"
                },
                {
                    "date": 1741682456560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     if (adminChecker) {\r\n       console.log('Admin user already exists, skipping seed');\r\n       return;\r\n     }\r\n-const hashedPassword = await bcrypt.hash(\"  const pdfName = `${book?.bookName}(literalouge.com).pdf`;\", bcrypt.genSaltSync()); \r\n+const hashedPassword = await bcrypt.hash(\"\", bcrypt.genSaltSync()); \r\n const adminUser = {\r\n   \"username\": \"adeyinka\",\r\n   \"phoneNumber\": \"07085812226\",\r\n   \"email\": \"fawazmusty247@gmail.com\",\r\n"
                },
                {
                    "date": 1741682468220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     if (adminChecker) {\r\n       console.log('Admin user already exists, skipping seed');\r\n       return;\r\n     }\r\n-const hashedPassword = await bcrypt.hash(\"\", bcrypt.genSaltSync()); \r\n+const hashedPassword = await bcrypt.hash(\"pr\", bcrypt.genSaltSync()); \r\n const adminUser = {\r\n   \"username\": \"adeyinka\",\r\n   \"phoneNumber\": \"07085812226\",\r\n   \"email\": \"fawazmusty247@gmail.com\",\r\n"
                },
                {
                    "date": 1741682473783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+import User from \"../models/user.js\"\r\n+import bcrypt from \"bcrypt\";\r\n+\r\n+export const seedAdmin = async () =>{\r\n+try {\r\n+  const adminChecker = await User.findOne({ where: { email: 'test@example.com' } });\r\n+    if (adminChecker) {\r\n+      console.log('Admin user already exists, skipping seed');\r\n+      return;\r\n+    }\r\n+const hashedPassword = await bcrypt.hash(\"process.env\", bcrypt.genSaltSync()); \r\n+const adminUser = {\r\n+  \"username\": \"adeyinka\",\r\n+  \"phoneNumber\": \"07085812226\",\r\n+  \"email\": \"fawazmusty247@gmail.com\",\r\n+  \"password\": hashedPassword,\r\n+  \"role\": \"superAdmin\"\r\n+};\r\n+\r\n+await appUser.create(adminUser)\r\n+ await mongoose.disconnect();\r\n+ console.log('Admin user seeded successfully')\r\n+ } catch (error) {\r\n+  console.error('Error seeding admin user')\r\n+} \r\n+}\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741682483394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+import User from \"../models/user.js\"\r\n+import bcrypt from \"bcrypt\";\r\n+\r\n+export const seedAdmin = async () =>{\r\n+try {\r\n+  const adminChecker = await User.findOne({ where: { email: 'test@example.com' } });\r\n+    if (adminChecker) {\r\n+      console.log('Admin user already exists, skipping seed');\r\n+      return;\r\n+    }\r\n+const hashedPassword = await bcrypt.hash(\"process.env.afmin\", bcrypt.genSaltSync()); \r\n+const adminUser = {\r\n+  \"username\": \"adeyinka\",\r\n+  \"phoneNumber\": \"07085812226\",\r\n+  \"email\": \"fawazmusty247@gmail.com\",\r\n+  \"password\": hashedPassword,\r\n+  \"role\": \"superAdmin\"\r\n+};\r\n+\r\n+await appUser.create(adminUser)\r\n+ await mongoose.disconnect();\r\n+ console.log('Admin user seeded successfully')\r\n+ } catch (error) {\r\n+  console.error('Error seeding admin user')\r\n+} \r\n+}\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741682492021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     if (adminChecker) {\r\n       console.log('Admin user already exists, skipping seed');\r\n       return;\r\n     }\r\n-const hashedPassword = await bcrypt.hash(\"process.env.afmin\", bcrypt.genSaltSync()); \r\n+const hashedPassword = await bcrypt.hash(\"process.env.A\", bcrypt.genSaltSync()); \r\n const adminUser = {\r\n   \"username\": \"adeyinka\",\r\n   \"phoneNumber\": \"07085812226\",\r\n   \"email\": \"fawazmusty247@gmail.com\",\r\n@@ -23,59 +23,5 @@\n  } catch (error) {\r\n   console.error('Error seeding admin user')\r\n } \r\n }\r\n- \n-import User from \"../models/user.js\"\r\n-import bcrypt from \"bcrypt\";\r\n-\r\n-export const seedAdmin = async () =>{\r\n-try {\r\n-  const adminChecker = await User.findOne({ where: { email: 'test@example.com' } });\r\n-    if (adminChecker) {\r\n-      console.log('Admin user already exists, skipping seed');\r\n-      return;\r\n-    }\r\n-const hashedPassword = await bcrypt.hash(\"process.env\", bcrypt.genSaltSync()); \r\n-const adminUser = {\r\n-  \"username\": \"adeyinka\",\r\n-  \"phoneNumber\": \"07085812226\",\r\n-  \"email\": \"fawazmusty247@gmail.com\",\r\n-  \"password\": hashedPassword,\r\n-  \"role\": \"superAdmin\"\r\n-};\r\n-\r\n-await appUser.create(adminUser)\r\n- await mongoose.disconnect();\r\n- console.log('Admin user seeded successfully')\r\n- } catch (error) {\r\n-  console.error('Error seeding admin user')\r\n-} \r\n-}\r\n- \n-import User from \"../models/user.js\"\r\n-import bcrypt from \"bcrypt\";\r\n-\r\n-export const seedAdmin = async () =>{\r\n-try {\r\n-  const adminChecker = await User.findOne({ where: { email: 'test@example.com' } });\r\n-    if (adminChecker) {\r\n-      console.log('Admin user already exists, skipping seed');\r\n-      return;\r\n-    }\r\n-const hashedPassword = await bcrypt.hash(\"pr\", bcrypt.genSaltSync()); \r\n-const adminUser = {\r\n-  \"username\": \"adeyinka\",\r\n-  \"phoneNumber\": \"07085812226\",\r\n-  \"email\": \"fawazmusty247@gmail.com\",\r\n-  \"password\": hashedPassword,\r\n-  \"role\": \"superAdmin\"\r\n-};\r\n-\r\n-await appUser.create(adminUser)\r\n- await mongoose.disconnect();\r\n- console.log('Admin user seeded successfully')\r\n- } catch (error) {\r\n-  console.error('Error seeding admin user')\r\n-} \r\n-}\r\n  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741682498721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+import User from \"../models/user.js\"\r\n+import bcrypt from \"bcrypt\";\r\n+\r\n+export const seedAdmin = async () =>{\r\n+try {\r\n+  const adminChecker = await User.findOne({ where: { email: 'test@example.com' } });\r\n+    if (adminChecker) {\r\n+      console.log('Admin user already exists, skipping seed');\r\n+      return;\r\n+    }\r\n+const hashedPassword = await bcrypt.hash(\"process.env.ADMIN_PIN\", bcrypt.genSaltSync()); \r\n+const adminUser = {\r\n+  \"username\": \"adeyinka\",\r\n+  \"phoneNumber\": \"07085812226\",\r\n+  \"email\": \"fawazmusty247@gmail.com\",\r\n+  \"password\": hashedPassword,\r\n+  \"role\": \"superAdmin\"\r\n+};\r\n+\r\n+await appUser.create(adminUser)\r\n+ await mongoose.disconnect();\r\n+ console.log('Admin user seeded successfully')\r\n+ } catch (error) {\r\n+  console.error('Error seeding admin user')\r\n+} \r\n+}\r\n+ \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741682504627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n     if (adminChecker) {\r\n       console.log('Admin user already exists, skipping seed');\r\n       return;\r\n     }\r\n-const hashedPassword = await bcrypt.hash(\"process.env.ADMIN_PIN\", bcrypt.genSaltSync()); \r\n+const hashedPassword = await bcrypt.hash(\"process.env.ADMIN_PWD\", bcrypt.genSaltSync()); \r\n const adminUser = {\r\n   \"username\": \"adeyinka\",\r\n   \"phoneNumber\": \"07085812226\",\r\n   \"email\": \"fawazmusty247@gmail.com\",\r\n@@ -23,32 +23,5 @@\n  } catch (error) {\r\n   console.error('Error seeding admin user')\r\n } \r\n }\r\n- \n-import User from \"../models/user.js\"\r\n-import bcrypt from \"bcrypt\";\r\n-\r\n-export const seedAdmin = async () =>{\r\n-try {\r\n-  const adminChecker = await User.findOne({ where: { email: 'test@example.com' } });\r\n-    if (adminChecker) {\r\n-      console.log('Admin user already exists, skipping seed');\r\n-      return;\r\n-    }\r\n-const hashedPassword = await bcrypt.hash(\"process.env.A\", bcrypt.genSaltSync()); \r\n-const adminUser = {\r\n-  \"username\": \"adeyinka\",\r\n-  \"phoneNumber\": \"07085812226\",\r\n-  \"email\": \"fawazmusty247@gmail.com\",\r\n-  \"password\": hashedPassword,\r\n-  \"role\": \"superAdmin\"\r\n-};\r\n-\r\n-await appUser.create(adminUser)\r\n- await mongoose.disconnect();\r\n- console.log('Admin user seeded successfully')\r\n- } catch (error) {\r\n-  console.error('Error seeding admin user')\r\n-} \r\n-}\r\n  \n\\ No newline at end of file\n"
                }
            ],
            "date": 1740126365012,
            "name": "Commit-0",
            "content": "import User from \"../models/user.js\"\r\nimport bcrypt from \"bcrypt\";\r\n\r\nexport const seedAdmin = async () =>{\r\ntry {\r\n  const adminChecker = await User.findOne({email : 'fawazmusty247@gmail.com'});\r\n    if (adminChecker) {\r\n      console.log('Admin user already exists, skipping seed');\r\n      return;\r\n    }\r\nconst hashedPassword = await bcrypt.hash(\"abc123\", bcrypt.genSaltSync()); \r\nconst adminUser = {\r\n  \"username\": \"adeyinka\",\r\n  \"phoneNumber\": \"07085812226\",\r\n  \"email\": \"fawazmusty247@gmail.com\",\r\n  \"password\": hashedPassword,\r\n  \"role\": \"superAdmin\"\r\n};\r\n\r\nawait appUser.create(adminUser)\r\n await mongoose.disconnect();\r\n console.log('Admin user seeded successfully')\r\n } catch (error) {\r\n  console.error('Error seeding admin user')\r\n} \r\n}\r\n "
        }
    ]
}